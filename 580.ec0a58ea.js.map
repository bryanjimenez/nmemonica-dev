{"version":3,"file":"580.ec0a58ea.js","sources":["webpack://nmemonica/./src/components/Form/ChoiceNumberSlider.tsx?c46f","webpack://nmemonica/./src/components/Form/SettingsGKana.tsx"],"sourcesContent":["import { Slider, Typography } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport \"../../css/ChoiceNumberSlider.css\";\n\ninterface Marks {\n  value: number;\n  raw: number;\n}\n\ninterface ChoiceNumberSliderProps {\n  initial: number;\n  setChoiceN: (n: number) => void;\n  /** Override choice size in wideMode */\n  wideN?: number;\n  wideMode?: boolean;\n  toggleWide?: () => void;\n}\n\nexport default function ChoiceNumberSlider(props: ChoiceNumberSliderProps) {\n  const [initVal] = useState(props.initial);\n\n  const min = 4;\n  const max = 16;\n  const wide = props.wideN ?? 32;\n\n  let marks: Marks[] = [];\n  let marksMap: Record<string, number> = {};\n\n  for (let x = min; x < max + 1; x++) {\n    const slide = ((x - min) / (max + 1 - min)) * 75;\n    marks = [...marks, { value: slide, raw: x }];\n    marksMap[`r ${slide}`] = x;\n    marksMap[`s ${x}`] = slide;\n  }\n  marks = [...marks, { value: 100, raw: wide }];\n  marksMap[`r 100`] = wide;\n  marksMap[`s ${wide}`] = 100;\n\n  const slideToRaw = (slide: number) => {\n    return marksMap[`r ${slide}`];\n  };\n\n  const slideToRawString = (slide: number) => {\n    return String(slideToRaw(slide));\n  };\n\n  const rawToSlide = (raw: number) => {\n    return marksMap[`s ${raw}`];\n  };\n\n  const handleChange = (newValue: number) => {\n    const prevVal = props.initial;\n    const curVal = slideToRaw(newValue);\n\n    if (curVal !== wide && prevVal !== wide && curVal !== prevVal) {\n      props.setChoiceN(curVal);\n      if (props.wideMode === true && typeof props.toggleWide === \"function\") {\n        props.toggleWide();\n      }\n    } else if (curVal !== wide && prevVal === wide && curVal !== prevVal) {\n      props.setChoiceN(curVal);\n      if (props.wideMode === true && typeof props.toggleWide === \"function\") {\n        props.toggleWide();\n      }\n    } else if (curVal === wide && curVal !== prevVal) {\n      props.setChoiceN(curVal);\n      if (props.wideMode === false && typeof props.toggleWide === \"function\") {\n        props.toggleWide();\n      }\n    }\n  };\n\n  return (\n    <div className=\"kana-slider\">\n      <Typography id=\"discrete-slider-restrict\" gutterBottom>\n        Difficulty\n      </Typography>\n      <Slider\n        defaultValue={rawToSlide(initVal)}\n        valueLabelFormat={slideToRaw}\n        getAriaValueText={slideToRawString}\n        aria-labelledby=\"discrete-slider-restrict\"\n        step={null}\n        valueLabelDisplay=\"auto\"\n        marks={marks}\n        onChangeCommitted={(event, newValue) => {\n          if (typeof newValue === \"number\") {\n            handleChange(newValue);\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nChoiceNumberSlider.propTypes = {\n  initial: PropTypes.number,\n  wideMode: PropTypes.bool,\n  setChoiceN: PropTypes.func,\n  toggleWide: PropTypes.func,\n};\n","import { useDispatch } from \"react-redux\";\n\nimport ChoiceNumberSlider from \"./ChoiceNumberSlider\";\nimport SettingsSwitch from \"./SettingsSwitch\";\nimport { buildAction } from \"../../helper/eventHandlerHelper\";\nimport { labelOptions } from \"../../helper/gameHelper\";\nimport { useConnectKana } from \"../../hooks/useConnectKana\";\nimport type { AppDispatch } from \"../../slices\";\nimport {\n  setKanaBtnN,\n  toggleKana,\n  toggleKanaEasyMode,\n  toggleKanaGameWideMode,\n} from \"../../slices/kanaSlice\";\nimport { KanaType } from \"../../slices/settingHelper\";\n\nexport default function SettingsKanaGame() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { charSet, easyMode, wideMode, choiceN } = useConnectKana();\n\n  const el = (\n    <div className=\"outer\">\n      <div className=\"d-flex flex-row justify-content-between\">\n        <div className=\"column-1\"></div>\n        <div className=\"column-2 setting-block\">\n          <div>\n            <SettingsSwitch\n              active={charSet === KanaType.HIRAGANA}\n              action={buildAction(dispatch, toggleKana)}\n              statusText={labelOptions(charSet, [\n                \"Hiragana\",\n                \"Katakana\",\n                \"Mixed\",\n              ])}\n            />\n          </div>\n          <div className=\"d-flex justify-content-end p-2\">\n            <ChoiceNumberSlider\n              initial={choiceN}\n              setChoiceN={buildAction(dispatch, setKanaBtnN)}\n              wideMode={wideMode}\n              wideN={31}\n              toggleWide={buildAction(dispatch, toggleKanaGameWideMode)}\n            />\n          </div>\n          <div>\n            <SettingsSwitch\n              active={easyMode}\n              action={buildAction(dispatch, toggleKanaEasyMode)}\n              statusText=\"Kana Hints\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return el;\n}\n"],"names":["ChoiceNumberSlider","props","raw","initVal","useState","initial","wide","wideN","marks","marksMap","x","max","slide","value","slideToRaw","handleChange","newValue","prevVal","curVal","setChoiceN","wideMode","toggleWide","className","Typography","id","gutterBottom","Slider","defaultValue","valueLabelFormat","getAriaValueText","String","step","valueLabelDisplay","onChangeCommitted","event","propTypes","SettingsKanaGame","dispatch","useDispatch","charSet","easyMode","choiceN","useConnectKana","active","KanaType","action","buildAction","toggleKana","statusText","labelOptions","setKanaBtnN","toggleKanaGameWideMode","toggleKanaEasyMode"],"mappings":"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"}