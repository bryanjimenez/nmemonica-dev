{"version":3,"file":"748.5129731d.js","sources":["webpack://nmemonica/./src/components/Form/PlusMinus.tsx?f8e3*","webpack://nmemonica/./src/components/Form/SettingsPhrase.tsx","webpack://nmemonica/./src/components/Form/SimpleListMenu.tsx?7d4f*","webpack://nmemonica/./src/components/Form/ThresholdFilterSlider.tsx?6118*","webpack://nmemonica/./src/components/Pages/SetTermGFList.tsx?4d74*","webpack://nmemonica/./src/components/Pages/SetTermGList.tsx?5d96"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nexport default function PlusMinus(props) {\n    const { label, value } = props;\n    return /*#__PURE__*/ _jsxs(\"div\", {\n        className: classNames({\n            \"mb-3 d-flex flex-row justify-content-end\": true\n        }),\n        children: [\n            /*#__PURE__*/ _jsx(\"div\", {\n                children: label\n            }),\n            /*#__PURE__*/ _jsx(\"div\", {\n                className: \"clickable px-2\",\n                onClick: ()=>{\n                    props.onChange(value - 1);\n                },\n                children: \"-\"\n            }),\n            /*#__PURE__*/ _jsx(\"div\", {\n                className: classNames({\n                    \"px-2\": true\n                }),\n                children: value\n            }),\n            /*#__PURE__*/ _jsx(\"div\", {\n                className: \"clickable px-2\",\n                onClick: ()=>{\n                    props.onChange(value + 1);\n                },\n                children: \"+\"\n            })\n        ]\n    });\n}\nPlusMinus.propTypes = {\n    value: PropTypes.number\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useDispatch } from \"react-redux\";\nimport { NotReady } from \"./NotReady\";\nimport PlusMinus from \"./PlusMinus\";\nimport SettingsSwitch from \"./SettingsSwitch\";\nimport SimpleListMenu from \"./SimpleListMenu\";\nimport { ThresholdFilterSlider } from \"./ThresholdFilterSlider\";\nimport { buildAction } from \"../../helper/eventHandlerHelper\";\nimport { getStaleGroups, labelOptions } from \"../../helper/gameHelper\";\nimport { useConnectPhrase } from \"../../hooks/useConnectPhrase\";\nimport { getPhrase, removeFrequencyPhrase, setMemorizedThreshold, setSpaRepMaxItemReview, toggleIncludeNew, toggleIncludeReviewed, togglePhraseActiveGrp, togglePhrasesFilter, togglePhrasesOrdering, togglePhrasesReinforcement, togglePhrasesRomaji } from \"../../slices/phraseSlice\";\nimport { TermFilterBy, TermSortBy, TermSortByLabel } from \"../../slices/settingHelper\";\nimport { SetTermGFList } from \"../Pages/SetTermGFList\";\nimport { SetTermGList } from \"../Pages/SetTermGList\";\nexport default function SettingsPhrase() {\n    const dispatch = useDispatch();\n    const { phraseList: phrases, phraseGroups, sortMethod: phraseOrderRef, romajiActive: phraseRomajiRef, difficultyThreshold, activeGroup: phraseActive, filterType: phraseFilterRef, repetition: phraseRep, reinforce: phraseReinforceRef, spaRepMaxReviewItem, includeNew, includeReviewed } = useConnectPhrase();\n    const phraseFilter = phraseFilterRef.current;\n    const phraseOrder = phraseOrderRef.current;\n    const phraseRomaji = phraseRomajiRef.current;\n    const phraseReinforce = phraseReinforceRef.current;\n    if (phrases.length === 0) {\n        void dispatch(getPhrase());\n    }\n    const phraseFreq = Object.keys(phraseRep).filter((k)=>{\n        var _phraseRep_k;\n        return ((_phraseRep_k = phraseRep[k]) === null || _phraseRep_k === void 0 ? void 0 : _phraseRep_k.rein) === true;\n    });\n    if (phrases.length < 1 || Object.keys(phraseGroups).length < 1) return /*#__PURE__*/ _jsx(NotReady, {\n        addlStyle: \"phrases-settings\"\n    });\n    const stale = getStaleGroups(phraseGroups, phraseActive);\n    if (stale.length > 0) {\n        const error = new Error(\"Stale phrases active group\", {\n            cause: {\n                code: \"StalePhraseActiveGrp\",\n                value: stale\n            }\n        });\n        throw error;\n    }\n    const el = /*#__PURE__*/ _jsx(\"div\", {\n        className: \"outer\",\n        children: /*#__PURE__*/ _jsxs(\"div\", {\n            className: \"d-flex flex-row justify-content-between\",\n            children: [\n                /*#__PURE__*/ _jsxs(\"div\", {\n                    className: \"column-1\",\n                    children: [\n                        /*#__PURE__*/ _jsx(\"span\", {\n                            className: \"fs-5 fw-light\",\n                            children: labelOptions(phraseFilter, [\n                                \"Phrases Group\",\n                                \"Frequency List\",\n                                \"NOT_USED_Tags\"\n                            ])\n                        }),\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mb-2\",\n                            children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                active: phraseFilter % 2 === 0,\n                                action: buildAction(dispatch, togglePhrasesFilter),\n                                color: \"default\",\n                                statusText: \"Filter by\"\n                            })\n                        }),\n                        phraseFilter === TermFilterBy.GROUP && /*#__PURE__*/ _jsx(SetTermGList, {\n                            termsGroups: phraseGroups,\n                            termsActive: phraseActive,\n                            toggleTermActiveGrp: (grp)=>dispatch(togglePhraseActiveGrp(grp))\n                        }),\n                        phraseFilter === TermFilterBy.FREQUENCY && phraseFreq.length === 0 && /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"fst-italic\",\n                            children: \"No phrases have been chosen\"\n                        }),\n                        phraseFilter === TermFilterBy.FREQUENCY && phraseFreq.length > 0 && /*#__PURE__*/ _jsx(SetTermGFList, {\n                            termsActive: phraseActive,\n                            termsFreq: phraseFreq,\n                            terms: phrases,\n                            removeFrequencyTerm: (uid)=>dispatch(removeFrequencyPhrase(uid)),\n                            toggleTermActiveGrp: (grp)=>dispatch(togglePhraseActiveGrp(grp))\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ _jsxs(\"div\", {\n                    className: \"column-2 setting-block\",\n                    children: [\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mb-2\",\n                            children: /*#__PURE__*/ _jsx(SimpleListMenu, {\n                                title: \"Sort by:\",\n                                options: TermSortByLabel,\n                                initial: phraseOrder,\n                                allowed: [\n                                    TermSortBy.RANDOM,\n                                    TermSortBy.VIEW_DATE,\n                                    TermSortBy.RECALL\n                                ],\n                                onChange: (index)=>{\n                                    if (TermSortBy.RECALL === index) {\n                                        dispatch(togglePhrasesReinforcement(false));\n                                    }\n                                    return buildAction(dispatch, togglePhrasesOrdering)(index);\n                                }\n                            })\n                        }),\n                        phraseOrder === TermSortBy.RECALL && /*#__PURE__*/ _jsx(PlusMinus, {\n                            label: \"Max review items \",\n                            value: spaRepMaxReviewItem,\n                            onChange: (value)=>{\n                                dispatch(setSpaRepMaxItemReview(value));\n                            }\n                        }),\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"d-flex justify-content-end\",\n                            children: /*#__PURE__*/ _jsx(ThresholdFilterSlider, {\n                                threshold: difficultyThreshold,\n                                setThreshold: buildAction(dispatch, setMemorizedThreshold)\n                            })\n                        }),\n                        phraseOrder === TermSortBy.VIEW_DATE && /*#__PURE__*/ _jsxs(_Fragment, {\n                            children: [\n                                /*#__PURE__*/ _jsx(\"div\", {\n                                    className: \"mb-2\",\n                                    children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                        active: includeNew,\n                                        action: buildAction(dispatch, toggleIncludeNew),\n                                        statusText: \"Staleness +New\"\n                                    })\n                                }),\n                                /*#__PURE__*/ _jsx(\"div\", {\n                                    className: \"mb-2\",\n                                    children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                        active: includeReviewed,\n                                        action: buildAction(dispatch, toggleIncludeReviewed),\n                                        statusText: \"Staleness +Reviewed\"\n                                    })\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mb-2\",\n                            children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                active: phraseReinforce,\n                                action: buildAction(dispatch, togglePhrasesReinforcement),\n                                disabled: phraseFilter === TermFilterBy.FREQUENCY || phraseOrder === TermSortBy.RECALL,\n                                statusText: \"Reinforcement\"\n                            })\n                        }),\n                        /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mb-2\",\n                            children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                active: phraseRomaji,\n                                action: buildAction(dispatch, togglePhrasesRomaji),\n                                statusText: \"Romaji\"\n                            })\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n    return el;\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { IconButton, List, ListItemButton, ListItemText, Menu, MenuItem } from \"@mui/material\";\nimport { KebabHorizontalIcon } from \"@primer/octicons-react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useRef, useState } from \"react\";\nexport default function SimpleListMenu(props) {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(props.initial);\n    const optionsRef = useRef(props.options);\n    const allowedRef = useRef(props.allowed ?? props.options.map((o, i)=>i));\n    const options = optionsRef.current;\n    const allowed = allowedRef.current;\n    useEffect(()=>{\n        setSelectedIndex(props.initial);\n    }, [\n        props.initial\n    ]);\n    const open = Boolean(anchorEl);\n    const handleClickListItem = (event)=>{\n        setAnchorEl(event.currentTarget);\n    };\n    const handleMenuItemClick = (event, index)=>{\n        setSelectedIndex(index);\n        setAnchorEl(null);\n        props.onChange(index);\n    };\n    const handleClose = ()=>{\n        setAnchorEl(null);\n    };\n    return /*#__PURE__*/ _jsxs(\"div\", {\n        className: classNames({\n            clickable: props.disabled !== true,\n            \"d-flex\": true,\n            \"flex-row-reverse\": props.flip === true ? true : undefined,\n            \"justify-content-end\": true\n        }),\n        children: [\n            /*#__PURE__*/ _jsx(List, {\n                component: \"nav\",\n                disablePadding: true,\n                children: /*#__PURE__*/ _jsx(ListItemButton, {\n                    disableGutters: true,\n                    disabled: props.disabled === true,\n                    id: \"filter-button\",\n                    \"aria-haspopup\": \"listbox\",\n                    \"aria-controls\": \"filter-menu\",\n                    \"aria-expanded\": open ? \"true\" : undefined,\n                    onClick: handleClickListItem,\n                    children: /*#__PURE__*/ _jsx(ListItemText, {\n                        primary: props.title,\n                        secondary: options[selectedIndex],\n                        secondaryTypographyProps: {\n                            color: \"unset\"\n                        }\n                    })\n                })\n            }),\n            /*#__PURE__*/ _jsx(Menu, {\n                id: \"filter-menu\",\n                anchorEl: anchorEl,\n                open: open,\n                onClose: handleClose,\n                MenuListProps: {\n                    \"aria-labelledby\": \"filter-button\",\n                    role: \"listbox\"\n                },\n                children: options.map((option, index)=>/*#__PURE__*/ _jsx(MenuItem, {\n                        // disabled={index === 0}\n                        selected: index === selectedIndex,\n                        onClick: (event)=>{\n                            if (allowed.includes(index)) handleMenuItemClick(event, index);\n                        },\n                        children: allowed.includes(index) ? option : /*#__PURE__*/ _jsx(\"span\", {\n                            className: \"disabled-color\",\n                            children: option\n                        })\n                    }, option))\n            }),\n            /*#__PURE__*/ _jsx(IconButton, {\n                \"aria-labelledby\": \"filter-button\",\n                sx: {\n                    color: \"unset\",\n                    minWidth: \"55px\"\n                },\n                \"aria-haspopup\": \"listbox\",\n                disabled: props.disabled === true,\n                onClick: handleClickListItem,\n                children: /*#__PURE__*/ _jsx(KebabHorizontalIcon, {\n                    size: \"medium\",\n                    className: classNames({\n                        \"rotate-transition\": true,\n                        \"rotate-90\": open\n                    })\n                })\n            })\n        ]\n    });\n}\nSimpleListMenu.propTypes = {\n    disabled: PropTypes.bool,\n    flip: PropTypes.bool,\n    title: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.string),\n    initial: PropTypes.number,\n    onChange: PropTypes.func\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Slider } from \"@mui/material\";\nimport { SortAscIcon, SortDescIcon } from \"@primer/octicons-react\";\nimport PropTypes from \"prop-types\";\nimport { useCallback, useState } from \"react\";\nimport { heatMap } from \"../../helper/colorHelper\";\nimport { DIFFICULTY_THRLD, MEMORIZED_THRLD } from \"../../helper/sortHelper\";\nexport function ThresholdFilterSlider(props) {\n    const { threshold, setThreshold } = props;\n    const [defaultValue] = useState(Math.abs(threshold));\n    const c = heatMap(Math.abs(threshold) / 100, 0.75);\n    const difficultyMarks = [\n        {\n            value: MEMORIZED_THRLD\n        },\n        {\n            value: DIFFICULTY_THRLD\n        }\n    ];\n    const flipThresholdCB = useCallback(()=>{\n        setThreshold(-1 * threshold);\n    }, [\n        setThreshold,\n        threshold\n    ]);\n    return /*#__PURE__*/ _jsxs(_Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(\"div\", {\n                className: \"position-relative text-nowrap w-0 fs-x-small\",\n                style: {\n                    top: \"-15px\"\n                },\n                children: `Difficulty filter: ${threshold}`\n            }),\n            /*#__PURE__*/ _jsx(Slider, {\n                sx: {\n                    color: c\n                },\n                defaultValue: defaultValue,\n                marks: difficultyMarks,\n                track: threshold < 0 ? undefined : \"inverted\",\n                onChangeCommitted: (e, newValue)=>{\n                    const sign = threshold < 0 ? -1 : 1;\n                    if (typeof newValue === \"number\") {\n                        if (newValue === 0) {\n                            setThreshold(Number(sign));\n                        } else {\n                            setThreshold(sign * newValue);\n                        }\n                    }\n                },\n                valueLabelDisplay: \"auto\"\n            }),\n            /*#__PURE__*/ _jsx(\"div\", {\n                className: \"mt-2 ms-3 \",\n                onClick: flipThresholdCB,\n                children: threshold < 0 ? /*#__PURE__*/ _jsx(SortAscIcon, {}) : /*#__PURE__*/ _jsx(SortDescIcon, {})\n            })\n        ]\n    });\n}\nThresholdFilterSlider.propTypes = {\n    threshold: PropTypes.number,\n    setThreshold: PropTypes.func\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { IssueDraftIcon, XCircleIcon } from \"@primer/octicons-react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nfunction listItem(grpActive, i, uid, english, removeFrequencyTerm) {\n    return /*#__PURE__*/ _jsxs(\"div\", {\n        className: classNames({\n            \"p-0 px-2\": true,\n            clickable: grpActive\n        }),\n        onClick: ()=>{\n            if (grpActive) {\n                removeFrequencyTerm(uid);\n            }\n        },\n        children: [\n            /*#__PURE__*/ _jsxs(\"span\", {\n                className: \"p-1\",\n                children: [\n                    grpActive && /*#__PURE__*/ _jsx(XCircleIcon, {\n                        className: \"incorrect-color\",\n                        size: \"small\",\n                        \"aria-label\": \"remove\"\n                    }),\n                    !grpActive && /*#__PURE__*/ _jsx(IssueDraftIcon, {\n                        // className=\"incorrect-color\"\n                        size: \"small\",\n                        \"aria-label\": \"inactive\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ _jsx(\"span\", {\n                className: \"p-1\",\n                children: english\n            })\n        ]\n    }, uid);\n}\n/**\n * Groups + Frequency term list\n */ export function SetTermGFList(props) {\n    let cleanup = [];\n    const thisgrp = props.termsFreq.reduce((acc, f)=>{\n        const found = props.terms.find((v)=>v.uid === f);\n        if (found) {\n            acc = [\n                ...acc,\n                found\n            ];\n        } else {\n            cleanup = [\n                ...cleanup,\n                f\n            ];\n        }\n        return acc;\n    }, []);\n    const grplist = thisgrp.reduce((acc, cur)=>{\n        const key = cur.grp ? cur.grp : \"undefined\";\n        if (acc[key]) {\n            acc[key] = [\n                ...acc[key],\n                cur\n            ];\n        } else {\n            acc[key] = [\n                cur\n            ];\n        }\n        return acc;\n    }, {});\n    return /*#__PURE__*/ _jsxs(\"div\", {\n        children: [\n            /*#__PURE__*/ _jsx(\"span\", {\n                className: \"fs-5 fw-light\",\n                children: \"Frequency\"\n            }),\n            /*#__PURE__*/ _jsx(\"div\", {\n                children: Object.keys(grplist).map((g)=>{\n                    const grpActive = props.termsActive.includes(g);\n                    return /*#__PURE__*/ _jsxs(\"div\", {\n                        className: \"mb-2\",\n                        children: [\n                            /*#__PURE__*/ _jsx(\"span\", {\n                                className: classNames({\n                                    \"font-weight-bold\": grpActive\n                                }),\n                                onClick: ()=>props.toggleTermActiveGrp(g),\n                                children: g\n                            }),\n                            /*#__PURE__*/ _jsx(\"div\", {\n                                children: grplist[g].map((word, iw)=>listItem(grpActive, iw, word.uid, word.english, props.removeFrequencyTerm))\n                            })\n                        ]\n                    }, g);\n                })\n            }),\n            cleanup.length > 0 && /*#__PURE__*/ _jsxs(\"div\", {\n                className: \"mt-5 text-break\",\n                children: [\n                    /*#__PURE__*/ _jsx(\"span\", {\n                        className: \"font-weight-bold\",\n                        children: \"Manual cleanup\"\n                    }),\n                    cleanup.map((orphanUid, i)=>listItem(true, i, orphanUid, orphanUid, props.removeFrequencyTerm))\n                ]\n            })\n        ]\n    });\n}\nSetTermGFList.propTypes = {\n    termsActive: PropTypes.array,\n    termsFreq: PropTypes.array,\n    terms: PropTypes.array,\n    removeFrequencyTerm: PropTypes.func,\n    toggleTermActiveGrp: PropTypes.func\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport orderBy from \"lodash/orderBy\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { GroupItem } from \"../Form/GroupItem\";\n/**\n * Group and subgroup list\n * @param {SetTermGListProps} props\n */ export function SetTermGList(props) {\n    return /*#__PURE__*/ _jsxs(\"div\", {\n        children: [\n            /*#__PURE__*/ _jsx(\"span\", {\n                className: \"fs-5 fw-light\",\n                children: \"Groups\"\n            }),\n            Object.keys(props.termsGroups).map((g)=>{\n                const grpActive = props.termsActive.includes(g);\n                return /*#__PURE__*/ _jsxs(\"div\", {\n                    children: [\n                        /*#__PURE__*/ _jsx(GroupItem, {\n                            active: props.termsActive.includes(g),\n                            onClick: ()=>props.toggleTermActiveGrp(g),\n                            children: g\n                        }),\n                        !grpActive && orderBy(props.termsGroups[g], (o)=>{\n                            // order numerically if group has _number\n                            const [, /*lbl,*/ num] = o.split(\"_\");\n                            if (Number.isInteger(parseInt(num, 10))) {\n                                return parseInt(num, 10);\n                            }\n                            return o;\n                        }).map((s)=>/*#__PURE__*/ _jsx(GroupItem, {\n                                addlStyle: \"ms-3\",\n                                active: props.termsActive.includes(g + \".\" + s),\n                                onClick: ()=>{\n                                    props.toggleTermActiveGrp(g + \".\" + s);\n                                },\n                                children: s\n                            }, `${g}.${s}`))\n                    ]\n                }, g);\n            })\n        ]\n    });\n}\nSetTermGList.propTypes = {\n    termsGroups: PropTypes.object,\n    termsActive: PropTypes.array,\n    toggleTermActiveGrp: PropTypes.func\n};\n"],"names":["PlusMinus","props","label","value","className","children","onClick","onChange","propTypes","SettingsPhrase","dispatch","useDispatch","phraseList","phrases","phraseGroups","sortMethod","phraseOrderRef","romajiActive","phraseRomajiRef","difficultyThreshold","activeGroup","phraseActive","filterType","phraseFilterRef","repetition","phraseRep","reinforce","phraseReinforceRef","spaRepMaxReviewItem","includeNew","includeReviewed","useConnectPhrase","phraseFilter","current","phraseOrder","phraseRomaji","phraseReinforce","length","getPhrase","phraseFreq","Object","keys","filter","k","_phraseRep_k","rein","NotReady","addlStyle","stale","getStaleGroups","Error","cause","code","labelOptions","active","action","buildAction","togglePhrasesFilter","color","statusText","TermFilterBy","SetTermGList","termsGroups","termsActive","toggleTermActiveGrp","grp","togglePhraseActiveGrp","SetTermGFList","termsFreq","terms","removeFrequencyTerm","uid","removeFrequencyPhrase","title","options","TermSortByLabel","initial","allowed","TermSortBy","index","togglePhrasesReinforcement","togglePhrasesOrdering","setSpaRepMaxItemReview","ThresholdFilterSlider","threshold","setThreshold","setMemorizedThreshold","toggleIncludeNew","toggleIncludeReviewed","disabled","togglePhrasesRomaji","SimpleListMenu","anchorEl","setAnchorEl","useState","selectedIndex","setSelectedIndex","optionsRef","useRef","allowedRef","map","o","i","useEffect","open","Boolean","handleClickListItem","event","currentTarget","handleMenuItemClick","clickable","flip","undefined","List","component","disablePadding","ListItemButton","disableGutters","id","ListItemText","primary","secondary","secondaryTypographyProps","Menu","onClose","MenuListProps","role","option","MenuItem","selected","includes","IconButton","sx","minWidth","KebabHorizontalIcon","size","defaultValue","Math","abs","c","heatMap","difficultyMarks","MEMORIZED_THRLD","DIFFICULTY_THRLD","flipThresholdCB","useCallback","style","top","Slider","marks","track","onChangeCommitted","e","newValue","sign","Number","valueLabelDisplay","SortAscIcon","SortDescIcon","listItem","grpActive","english","XCircleIcon","IssueDraftIcon","cleanup","grplist","thisgrp","reduce","acc","f","found","find","v","cur","key","g","word","iw","orphanUid","GroupItem","num","split","isInteger","parseInt","s"],"mappings":"uNAGe,SAASA,EAAUC,CAAK,EACnC,GAAM,CAAEC,MAAAA,CAAK,CAAEC,MAAAA,CAAK,CAAE,CAAGF,EACzB,MAAqB,WAAM,MAAO,CAC9BG,UAAW,IAAW,CAClB,2CAA4C,EAChD,GACAC,SAAU,CACQ,UAAK,MAAO,CACtBA,SAAUH,CACd,GACc,UAAK,MAAO,CACtBE,UAAW,iBACXE,QAAS,KACLL,EAAMM,QAAQ,CAACJ,EAAQ,EAC3B,EACAE,SAAU,GACd,GACc,UAAK,MAAO,CACtBD,UAAW,IAAW,CAClB,OAAQ,EACZ,GACAC,SAAUF,CACd,GACc,UAAK,MAAO,CACtBC,UAAW,iBACXE,QAAS,KACLL,EAAMM,QAAQ,CAACJ,EAAQ,EAC3B,EACAE,SAAU,GACd,GACH,AACL,EACJ,CACAL,EAAUQ,SAAS,CAAG,CAClBL,MAAO,UACX,C,2QCxBe,SAASM,IACpB,IAAMC,EAAW,KAAAC,WAAA,IACX,CAAEC,WAAYC,CAAO,CAAEC,aAAAA,CAAY,CAAEC,WAAYC,CAAc,CAAEC,aAAcC,CAAe,CAAEC,oBAAAA,CAAmB,CAAEC,YAAaC,CAAY,CAAEC,WAAYC,CAAe,CAAEC,WAAYC,CAAS,CAAEC,UAAWC,CAAkB,CAAEC,oBAAAA,CAAmB,CAAEC,WAAAA,CAAU,CAAEC,gBAAAA,CAAe,CAAE,CAAG,KAAAC,gBAAA,IACxRC,EAAeT,EAAgBU,OAAO,CACtCC,EAAclB,EAAeiB,OAAO,CACpCE,EAAejB,EAAgBe,OAAO,CACtCG,EAAkBT,EAAmBM,OAAO,AAC3B,KAAnBpB,EAAQwB,MAAM,EACT3B,EAAS,KAAA4B,SAAA,KAElB,IAAMC,EAAaC,OAAOC,IAAI,CAAChB,GAAWiB,MAAM,CAAC,AAACC,IAC9C,IAAIC,EACJ,MAAO,AAAC,CAAkC,OAAjCA,CAAAA,EAAenB,CAAS,CAACkB,EAAE,AAAD,GAAeC,AAAiB,KAAK,IAAtBA,EAA0B,KAAK,EAAIA,EAAaC,IAAI,AAAD,IAAO,EAChH,GACA,GAAIhC,EAAQwB,MAAM,CAAG,GAAKG,OAAOC,IAAI,CAAC3B,GAAcuB,MAAM,CAAG,EAAG,MAAqB,UAAK,EAAAS,QAAQ,CAAE,CAChGC,UAAW,kBACf,GACA,IAAMC,EAAQ,KAAAC,cAAA,EAAenC,EAAcO,GAC3C,GAAI2B,EAAMX,MAAM,CAAG,EAOf,MANc,AAAIa,MAAM,6BAA8B,CAClDC,MAAO,CACHC,KAAM,uBACNjD,MAAO6C,CACX,CACJ,GA4HJ,MAzHyB,UAAK,MAAO,CACjC5C,UAAW,QACXC,SAAwB,WAAM,MAAO,CACjCD,UAAW,0CACXC,SAAU,CACQ,WAAM,MAAO,CACvBD,UAAW,WACXC,SAAU,CACQ,UAAK,OAAQ,CACvBD,UAAW,gBACXC,SAAU,KAAAgD,YAAA,EAAarB,EAAc,CACjC,gBACA,iBACA,gBACH,CACL,GACc,UAAK,MAAO,CACtB5B,UAAW,OACXC,SAAwB,UAAK,SAAc,CAAE,CACzCiD,OAAQtB,EAAe,GAAM,EAC7BuB,OAAQ,KAAAC,WAAA,EAAY9C,EAAU,EAAA+C,mBAAmB,EACjDC,MAAO,UACPC,WAAY,WAChB,EACJ,GACA3B,IAAiB,EAAA4B,YAAA,MAAkB,EAAkB,UAAK,EAAAC,YAAY,CAAE,CACpEC,YAAahD,EACbiD,YAAa1C,EACb2C,oBAAqB,AAACC,GAAMvD,EAAS,KAAAwD,qBAAA,EAAsBD,GAC/D,GACAjC,IAAiB,EAAA4B,YAAA,UAAsB,EAAIrB,AAAsB,IAAtBA,EAAWF,MAAM,EAAwB,UAAK,MAAO,CAC5FjC,UAAW,aACXC,SAAU,6BACd,GACA2B,IAAiB,EAAA4B,YAAA,UAAsB,EAAIrB,EAAWF,MAAM,CAAG,GAAmB,UAAK,EAAA8B,aAAa,CAAE,CAClGJ,YAAa1C,EACb+C,UAAW7B,EACX8B,MAAOxD,EACPyD,oBAAqB,AAACC,GAAM7D,EAAS,KAAA8D,qBAAA,EAAsBD,IAC3DP,oBAAqB,AAACC,GAAMvD,EAAS,KAAAwD,qBAAA,EAAsBD,GAC/D,GACH,AACL,GACc,WAAM,MAAO,CACvB7D,UAAW,yBACXC,SAAU,CACQ,UAAK,MAAO,CACtBD,UAAW,OACXC,SAAwB,UAAK,SAAc,CAAE,CACzCoE,MAAO,WACPC,QAAS,EAAAC,eAAe,CACxBC,QAAS1C,EACT2C,QAAS,CACL,EAAAC,UAAA,OAAiB,CACjB,EAAAA,UAAA,UAAoB,CACpB,EAAAA,UAAA,OAAiB,CACpB,CACDvE,SAAU,AAACwE,IACH,EAAAD,UAAA,OAAiB,GAAKC,GACtBrE,EAAS,KAAAsE,0BAAA,EAA2B,KAEjC,KAAAxB,WAAA,EAAY9C,EAAU,EAAAuE,qBAAqB,EAAEF,GAE5D,EACJ,GACA7C,IAAgB,EAAA4C,UAAA,OAAiB,EAAkB,UAAK,SAAS,CAAE,CAC/D5E,MAAO,oBACPC,MAAOyB,EACPrB,SAAU,AAACJ,IACPO,EAAS,KAAAwE,sBAAA,EAAuB/E,GACpC,CACJ,GACc,UAAK,MAAO,CACtBC,UAAW,6BACXC,SAAwB,UAAK,EAAA8E,qBAAqB,CAAE,CAChDC,UAAWjE,EACXkE,aAAc,KAAA7B,WAAA,EAAY9C,EAAU,EAAA4E,qBAAqB,CAC7D,EACJ,GACApD,IAAgB,EAAA4C,UAAA,UAAoB,EAAkB,WAAM,UAAS,CAAE,CACnEzE,SAAU,CACQ,UAAK,MAAO,CACtBD,UAAW,OACXC,SAAwB,UAAK,SAAc,CAAE,CACzCiD,OAAQzB,EACR0B,OAAQ,KAAAC,WAAA,EAAY9C,EAAU,EAAA6E,gBAAgB,EAC9C5B,WAAY,gBAChB,EACJ,GACc,UAAK,MAAO,CACtBvD,UAAW,OACXC,SAAwB,UAAK,SAAc,CAAE,CACzCiD,OAAQxB,EACRyB,OAAQ,KAAAC,WAAA,EAAY9C,EAAU,EAAA8E,qBAAqB,EACnD7B,WAAY,qBAChB,EACJ,GACH,AACL,GACc,UAAK,MAAO,CACtBvD,UAAW,OACXC,SAAwB,UAAK,SAAc,CAAE,CACzCiD,OAAQlB,EACRmB,OAAQ,KAAAC,WAAA,EAAY9C,EAAU,EAAAsE,0BAA0B,EACxDS,SAAUzD,IAAiB,EAAA4B,YAAA,UAAsB,EAAI1B,IAAgB,EAAA4C,UAAA,OAAiB,CACtFnB,WAAY,eAChB,EACJ,GACc,UAAK,MAAO,CACtBvD,UAAW,OACXC,SAAwB,UAAK,SAAc,CAAE,CACzCiD,OAAQnB,EACRoB,OAAQ,KAAAC,WAAA,EAAY9C,EAAU,EAAAgF,mBAAmB,EACjD/B,WAAY,QAChB,EACJ,GACH,AACL,GACH,AACL,EACJ,EAEJ,C,qLC7Je,SAASgC,EAAe1F,CAAK,EACxC,GAAM,CAAC2F,EAAUC,EAAY,CAAG,KAAAC,QAAA,EAAS,MACnC,CAACC,EAAeC,EAAiB,CAAG,KAAAF,QAAA,EAAS7F,EAAM2E,OAAO,EAC1DqB,EAAa,KAAAC,MAAA,EAAOjG,EAAMyE,OAAO,EACjCyB,EAAa,KAAAD,MAAA,EAAOjG,EAAM4E,OAAO,EAAI5E,EAAMyE,OAAO,CAAC0B,GAAG,CAAC,CAACC,EAAGC,IAAIA,IAC/D5B,EAAUuB,EAAWhE,OAAO,CAC5B4C,EAAUsB,EAAWlE,OAAO,CAClC,KAAAsE,SAAA,EAAU,KACNP,EAAiB/F,EAAM2E,OAAO,CAClC,EAAG,CACC3E,EAAM2E,OAAO,CAChB,EACD,IAAM4B,EAAOC,CAAAA,CAAQb,EACfc,EAAsB,AAACC,IACzBd,EAAYc,EAAMC,aAAa,CACnC,EACMC,EAAsB,CAACF,EAAO5B,KAChCiB,EAAiBjB,GACjBc,EAAY,MACZ5F,EAAMM,QAAQ,CAACwE,EACnB,EAIA,MAAqB,WAAM,MAAO,CAC9B3E,UAAW,IAAW,CAClB0G,UAAW7G,AAAmB,KAAnBA,EAAMwF,QAAQ,CACzB,SAAU,GACV,mBAAoBxF,AAAe,KAAfA,EAAM8G,IAAI,EAAmBC,KAAAA,EACjD,sBAAuB,EAC3B,GACA3G,SAAU,CACQ,UAAK,EAAA4G,IAAI,CAAE,CACrBC,UAAW,MACXC,eAAgB,GAChB9G,SAAwB,UAAK,EAAA+G,cAAc,CAAE,CACzCC,eAAgB,GAChB5B,SAAUxF,AAAmB,KAAnBA,EAAMwF,QAAQ,CACxB6B,GAAI,gBACJ,gBAAiB,UACjB,gBAAiB,cACjB,gBAAiBd,EAAO,OAASQ,KAAAA,EACjC1G,QAASoG,EACTrG,SAAwB,UAAK,EAAAkH,YAAY,CAAE,CACvCC,QAASvH,EAAMwE,KAAK,CACpBgD,UAAW/C,CAAO,CAACqB,EAAc,CACjC2B,yBAA0B,CACtBhE,MAAO,OACX,CACJ,EACJ,EACJ,GACc,UAAK,EAAAiE,IAAI,CAAE,CACrBL,GAAI,cACJ1B,SAAUA,EACVY,KAAMA,EACNoB,QAnCQ,KAChB/B,EAAY,KAChB,EAkCYgC,cAAe,CACX,kBAAmB,gBACnBC,KAAM,SACV,EACAzH,SAAUqE,EAAQ0B,GAAG,CAAC,CAAC2B,EAAQhD,IAAsB,UAAK,EAAAiD,QAAQ,CAAE,CAE5DC,SAAUlD,IAAUgB,EACpBzF,QAAS,AAACqG,IACF9B,EAAQqD,QAAQ,CAACnD,IAAQ8B,EAAoBF,EAAO5B,EAC5D,EACA1E,SAAUwE,EAAQqD,QAAQ,CAACnD,GAASgD,EAAuB,UAAK,OAAQ,CACpE3H,UAAW,iBACXC,SAAU0H,CACd,EACJ,EAAGA,GACX,GACc,UAAK,EAAAI,UAAU,CAAE,CAC3B,kBAAmB,gBACnBC,GAAI,CACA1E,MAAO,QACP2E,SAAU,MACd,EACA,gBAAiB,UACjB5C,SAAUxF,AAAmB,KAAnBA,EAAMwF,QAAQ,CACxBnF,QAASoG,EACTrG,SAAwB,UAAK,EAAAiI,mBAAmB,CAAE,CAC9CC,KAAM,SACNnI,UAAW,IAAW,CAClB,oBAAqB,GACrB,YAAaoG,CACjB,EACJ,EACJ,GACH,AACL,EACJ,CACAb,EAAenF,SAAS,CAAG,CACvBiF,SAAU,SACVsB,KAAM,SACNtC,MAAO,WACPC,QAAS,WAAiB,CAAC,UAAgB,EAC3CE,QAAS,WACTrE,SAAU,QACd,C,uMCnGO,SAAS4E,EAAsBlF,CAAK,EACvC,GAAM,CAAEmF,UAAAA,CAAS,CAAEC,aAAAA,CAAY,CAAE,CAAGpF,EAC9B,CAACuI,EAAa,CAAG,KAAA1C,QAAA,EAAS2C,KAAKC,GAAG,CAACtD,IACnCuD,EAAI,KAAAC,OAAA,EAAQH,KAAKC,GAAG,CAACtD,GAAa,IAAK,KACvCyD,EAAkB,CACpB,CACI1I,MAAO,EAAA2I,eAAe,AAC1B,EACA,CACI3I,MAAO,EAAA4I,gBAAgB,AAC3B,EACH,CACKC,EAAkB,KAAAC,WAAA,EAAY,KAChC5D,EAAa,GAAKD,EACtB,EAAG,CACCC,EACAD,EACH,EACD,MAAqB,WAAM,UAAS,CAAE,CAClC/E,SAAU,CACQ,UAAK,MAAO,CACtBD,UAAW,+CACX8I,MAAO,CACHC,IAAK,OACT,EACA9I,SAAU,CAAC,mBAAmB,EAAE+E,EAAU,CAAC,AAC/C,GACc,UAAK,EAAAgE,MAAM,CAAE,CACvBhB,GAAI,CACA1E,MAAOiF,CACX,EACAH,aAAcA,EACda,MAAOR,EACPS,MAAOlE,EAAY,EAAI4B,KAAAA,EAAY,WACnCuC,kBAAmB,CAACC,EAAGC,KACnB,IAAMC,EAAOtE,EAAY,EAAI,GAAK,CACV,WAApB,OAAOqE,IACHA,AAAa,IAAbA,EACApE,EAAasE,OAAOD,IAEpBrE,EAAaqE,EAAOD,GAGhC,EACAG,kBAAmB,MACvB,GACc,UAAK,MAAO,CACtBxJ,UAAW,aACXE,QAAS0I,EACT3I,SAAU+E,EAAY,EAAkB,UAAK,EAAAyE,WAAW,CAAE,CAAC,GAAmB,UAAK,EAAAC,YAAY,CAAE,CAAC,EACtG,GACH,AACL,EACJ,CACA3E,EAAsB3E,SAAS,CAAG,CAC9B4E,UAAW,WACXC,aAAc,QAClB,C,iKC3DA,SAAS0E,EAASC,CAAS,CAAE1D,CAAC,CAAE/B,CAAG,CAAE0F,CAAO,CAAE3F,CAAmB,EAC7D,MAAqB,WAAM,MAAO,CAC9BlE,UAAW,IAAW,CAClB,WAAY,GACZ0G,UAAWkD,CACf,GACA1J,QAAS,KACD0J,GACA1F,EAAoBC,EAE5B,EACAlE,SAAU,CACQ,WAAM,OAAQ,CACxBD,UAAW,MACXC,SAAU,CACN2J,GAA2B,UAAK,EAAAE,WAAW,CAAE,CACzC9J,UAAW,kBACXmI,KAAM,QACN,aAAc,QAClB,GACA,CAACyB,GAA2B,UAAK,EAAAG,cAAc,CAAE,CAE7C5B,KAAM,QACN,aAAc,UAClB,GACH,AACL,GACc,UAAK,OAAQ,CACvBnI,UAAW,MACXC,SAAU4J,CACd,GACH,AACL,EAAG1F,EACP,CAGW,SAASJ,EAAclE,CAAK,EACnC,IAAImK,EAAU,EAAE,CAgBVC,EAAUC,AAfArK,EAAMmE,SAAS,CAACmG,MAAM,CAAC,CAACC,EAAKC,KACzC,IAAMC,EAAQzK,EAAMoE,KAAK,CAACsG,IAAI,CAAC,AAACC,GAAIA,EAAErG,GAAG,GAAKkG,GAY9C,OAXIC,EACAF,EAAM,IACCA,EACHE,EACH,CAEDN,EAAU,IACHA,EACHK,EACH,CAEED,CACX,EAAG,EAAE,EACmBD,MAAM,CAAC,CAACC,EAAKK,KACjC,IAAMC,EAAMD,EAAI5G,GAAG,CAAG4G,EAAI5G,GAAG,CAAG,YAWhC,OAVIuG,CAAG,CAACM,EAAI,CACRN,CAAG,CAACM,EAAI,CAAG,IACJN,CAAG,CAACM,EAAI,CACXD,EACH,CAEDL,CAAG,CAACM,EAAI,CAAG,CACPD,EACH,CAEEL,CACX,EAAG,CAAC,GACJ,MAAqB,WAAM,MAAO,CAC9BnK,SAAU,CACQ,UAAK,OAAQ,CACvBD,UAAW,gBACXC,SAAU,WACd,GACc,UAAK,MAAO,CACtBA,SAAUmC,OAAOC,IAAI,CAAC4H,GAASjE,GAAG,CAAC,AAAC2E,IAChC,IAAMf,EAAY/J,EAAM8D,WAAW,CAACmE,QAAQ,CAAC6C,GAC7C,MAAqB,WAAM,MAAO,CAC9B3K,UAAW,OACXC,SAAU,CACQ,UAAK,OAAQ,CACvBD,UAAW,IAAW,CAClB,mBAAoB4J,CACxB,GACA1J,QAAS,IAAIL,EAAM+D,mBAAmB,CAAC+G,GACvC1K,SAAU0K,CACd,GACc,UAAK,MAAO,CACtB1K,SAAUgK,CAAO,CAACU,EAAE,CAAC3E,GAAG,CAAC,CAAC4E,EAAMC,IAAKlB,EAASC,EAAWiB,EAAID,EAAKzG,GAAG,CAAEyG,EAAKf,OAAO,CAAEhK,EAAMqE,mBAAmB,EAClH,GACH,AACL,EAAGyG,EACP,EACJ,GACAX,EAAQ/H,MAAM,CAAG,GAAmB,WAAM,MAAO,CAC7CjC,UAAW,kBACXC,SAAU,CACQ,UAAK,OAAQ,CACvBD,UAAW,mBACXC,SAAU,gBACd,GACA+J,EAAQhE,GAAG,CAAC,CAAC8E,EAAW5E,IAAIyD,EAAS,GAAMzD,EAAG4E,EAAWA,EAAWjL,EAAMqE,mBAAmB,GAChG,AACL,GACH,AACL,EACJ,C,WACAH,EAAc3D,SAAS,CAAG,CACtBuD,YAAa,UACbK,UAAW,UACXC,MAAO,UACPC,oBAAqB,SACrBN,oBAAqB,QACzB,C,+KC7GW,SAASH,EAAa5D,CAAK,EAClC,MAAqB,WAAM,MAAO,CAC9BI,SAAU,CACQ,UAAK,OAAQ,CACvBD,UAAW,gBACXC,SAAU,QACd,GACAmC,OAAOC,IAAI,CAACxC,EAAM6D,WAAW,EAAEsC,GAAG,CAAC,AAAC2E,IAChC,IAAMf,EAAY/J,EAAM8D,WAAW,CAACmE,QAAQ,CAAC6C,GAC7C,MAAqB,WAAM,MAAO,CAC9B1K,SAAU,CACQ,UAAK,EAAA8K,SAAS,CAAE,CAC1B7H,OAAQrD,EAAM8D,WAAW,CAACmE,QAAQ,CAAC6C,GACnCzK,QAAS,IAAIL,EAAM+D,mBAAmB,CAAC+G,GACvC1K,SAAU0K,CACd,GACA,CAACf,GAAa,IAAQ/J,EAAM6D,WAAW,CAACiH,EAAE,CAAE,AAAC1E,IAEzC,GAAM,EAAY+E,EAAI,CAAG/E,EAAEgF,KAAK,CAAC,YACjC,AAAI1B,OAAO2B,SAAS,CAACC,SAASH,EAAK,KACxBG,SAASH,EAAK,IAElB/E,CACX,GAAGD,GAAG,CAAC,AAACoF,GAAkB,UAAK,EAAAL,SAAS,CAAE,CAClCpI,UAAW,OACXO,OAAQrD,EAAM8D,WAAW,CAACmE,QAAQ,CAAC6C,EAAI,IAAMS,GAC7ClL,QAAS,KACLL,EAAM+D,mBAAmB,CAAC+G,EAAI,IAAMS,EACxC,EACAnL,SAAUmL,CACd,EAAG,CAAC,EAAET,EAAE,CAAC,EAAES,EAAE,CAAC,GACrB,AACL,EAAGT,EACP,GACH,AACL,EACJ,CACAlH,EAAarD,SAAS,CAAG,CACrBsD,YAAa,WACbC,YAAa,UACbC,oBAAqB,QACzB,C"}