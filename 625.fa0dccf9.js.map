{"version":3,"file":"625.fa0dccf9.js","sources":["webpack://nmemonica/./src/components/Form/SettingsDeveloper.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Button } from \"@mui/material\";\nimport { CheckCircleIcon, DownloadIcon, SyncIcon, UploadIcon } from \"@primer/octicons-react\";\nimport classNames from \"classnames\";\nimport { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ExtSourceInput, { ExternalSourceType, getExternalSourceType } from \"./ExtSourceInput\";\nimport SettingsSwitch from \"./SettingsSwitch\";\nimport { IDBStores, openIDB, putIDBItem } from \"../../../pwa/helper/idbHelper\";\nimport { localStorageKey } from \"../../constants/paths\";\nimport { buildAction } from \"../../helper/eventHandlerHelper\";\nimport { labelOptions } from \"../../helper/gameHelper\";\nimport { getLocalStorageSettings } from \"../../helper/localStorageHelper\";\nimport { swMessageDoHardRefresh } from \"../../helper/serviceWorkerHelper\";\n// import { useSubscribe } from \"../../hooks/useSubscribe\";\nimport { useConnectSetting } from \"../../hooks/useConnectSettings\";\nimport { debugToggled, importSettings, logger, setLastImport, setLocalDataEdited } from \"../../slices/globalSlice\";\nimport { clearKanji } from \"../../slices/kanjiSlice\";\nimport { clearOpposites } from \"../../slices/oppositeSlice\";\nimport { clearParticleGame } from \"../../slices/particleSlice\";\nimport { clearPhrases } from \"../../slices/phraseSlice\";\nimport { DebugLevel } from \"../../slices/settingHelper\";\nimport { getDatasets, importDatasets, saveSettingsLocalService, saveSheetLocalService } from \"../../slices/sheetSlice\";\nimport { clearVocabulary } from \"../../slices/vocabularySlice\";\nexport default function SettingsDeveloper() {\n    const dispatch = useDispatch();\n    const { cookies, debug, localServiceURL, lastImport } = useConnectSetting();\n    const [userInputError, setUserInputError] = useState(false);\n    const [userTrust, setUserTrust] = useState(false);\n    const [backedUp, setBackedUp] = useState(false);\n    const [imported, setImported] = useState(false);\n    const [importedConfig, setImportedSettings] = useState(false);\n    const [spin, setSpin] = useState(false);\n    const [hardRefreshUnavailable, setHardRefreshUnavailable] = useState(false);\n    // const serviceAddress = useRef(localServiceURL);\n    // const { registerCB } = useSubscribe(dispatch, serviceAddress);\n    const importDatasetsCB = useCallback(()=>{\n        if (!confirm(\"User edited datasets will be overwritten\")) {\n            return;\n        }\n        const type = getExternalSourceType(localServiceURL);\n        if (type === ExternalSourceType.Unset) {\n            // FIXME: this is not possible\n            // fetch cache.json\n            void dispatch(setLocalDataEdited(false));\n        } else {\n            // don't fetch cache.json\n            void dispatch(setLocalDataEdited(true));\n        }\n        void dispatch(importDatasets()).unwrap().then((workbook)=>// store workbook in indexedDB\n            openIDB().then((db)=>putIDBItem({\n                    db,\n                    store: IDBStores.WORKBOOK\n                }, {\n                    key: \"0\",\n                    workbook\n                }))).then(()=>{\n            // clear saved data states\n            dispatch(clearVocabulary());\n            dispatch(clearPhrases());\n            dispatch(clearKanji());\n            dispatch(clearParticleGame());\n            dispatch(clearOpposites());\n            setImported(true);\n            dispatch(setLastImport(`${[\n                \"Reset\",\n                \"Local\",\n                \"GitHub\"\n            ][type]}: ${new Date().toJSON()}`));\n        });\n    }, [\n        dispatch,\n        localServiceURL\n    ]);\n    const importUserConfigCB = useCallback(()=>{\n        if (!confirm(\"User settings will be overwritten\")) {\n            return;\n        }\n        void dispatch(importSettings()).then(()=>{\n            setImportedSettings(true);\n        });\n    }, [\n        dispatch\n    ]);\n    const backUpCB = useCallback(()=>{\n        if (!confirm(\"Back up:\\n - Datasets\\n - Settings\\n\\nto local service?\")) {\n            return;\n        }\n        const settingsBakP = new Promise((resolve, reject)=>{\n            let lsSettings;\n            try {\n                lsSettings = getLocalStorageSettings(localStorageKey);\n            } catch (e) {\n                dispatch(logger(\"Failed settings backup\", DebugLevel.ERROR));\n            }\n            if (!lsSettings) {\n                resolve();\n                return;\n            }\n            saveSettingsLocalService(lsSettings, localServiceURL).then(()=>resolve).catch(()=>reject);\n        });\n        const sheetsBakP = dispatch(getDatasets()).unwrap().then((obj)=>obj.map((sheetObj)=>saveSheetLocalService(sheetObj, localServiceURL))).then((s)=>Promise.all(s));\n        void Promise.all([\n            settingsBakP,\n            sheetsBakP\n        ]).then(()=>{\n            setBackedUp(true);\n        });\n    }, [\n        dispatch,\n        localServiceURL\n    ]);\n    const onChangeInputCB = useCallback((valid)=>{\n        setUserInputError(valid);\n    }, []);\n    const onChangeTrustCB = useCallback((trust)=>{\n        setUserTrust(trust);\n        if (!trust) {\n            setImported(null);\n            setBackedUp(null);\n        }\n    }, []);\n    return /*#__PURE__*/ _jsxs(\"div\", {\n        children: [\n            /*#__PURE__*/ _jsx(\"h3\", {\n                className: \"mt-3 mb-1\"\n            }),\n            /*#__PURE__*/ _jsxs(\"div\", {\n                className: \"d-flex flex-row justify-content-between\",\n                children: [\n                    /*#__PURE__*/ _jsx(\"div\", {\n                        className: \"column-1 mb-2 me-sm-2\"\n                    }),\n                    /*#__PURE__*/ _jsx(\"div\", {\n                        className: \"column-2\",\n                        children: /*#__PURE__*/ _jsxs(\"div\", {\n                            className: \"ps-2 d-flex flex-column align-items-end\",\n                            children: [\n                                /*#__PURE__*/ _jsx(\"div\", {\n                                    className: \"setting-block mb-2\",\n                                    children: /*#__PURE__*/ _jsx(SettingsSwitch, {\n                                        disabled: !cookies,\n                                        active: debug > DebugLevel.OFF,\n                                        action: buildAction(dispatch, debugToggled),\n                                        color: \"default\",\n                                        statusText: labelOptions(debug, [\n                                            \"Debug\",\n                                            \"Debug Error\",\n                                            \"Debug Warn\",\n                                            \"Debug\"\n                                        ])\n                                    })\n                                }),\n                                /*#__PURE__*/ _jsxs(\"div\", {\n                                    className: classNames({\n                                        \"d-flex justify-content-end mb-2\": true,\n                                        \"disabled-color\": hardRefreshUnavailable\n                                    }),\n                                    children: [\n                                        /*#__PURE__*/ _jsx(\"p\", {\n                                            id: \"hard-refresh\",\n                                            className: classNames({\n                                                \"text-right\": true,\n                                                \"disabled-color\": !cookies\n                                            }),\n                                            children: \"Hard Refresh\"\n                                        }),\n                                        /*#__PURE__*/ _jsx(\"div\", {\n                                            className: classNames({\n                                                \"spin-a-bit\": spin,\n                                                \"disabled-color\": !cookies,\n                                                clickable: cookies\n                                            }),\n                                            style: {\n                                                height: \"24px\"\n                                            },\n                                            \"aria-labelledby\": \"hard-refresh\",\n                                            onClick: cookies ? ()=>{\n                                                setSpin(true);\n                                                setHardRefreshUnavailable(false);\n                                                setTimeout(()=>{\n                                                    if (spin) {\n                                                        setSpin(false);\n                                                        setHardRefreshUnavailable(true);\n                                                    }\n                                                }, 3000);\n                                                void swMessageDoHardRefresh();\n                                            } : undefined,\n                                            children: /*#__PURE__*/ _jsx(SyncIcon, {\n                                                size: 24,\n                                                \"aria-label\": \"Hard Refresh\"\n                                            })\n                                        })\n                                    ]\n                                }),\n                                \" \"\n                            ]\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ _jsx(\"h3\", {\n                className: \"mt-3 mb-1 fw-light\",\n                children: \"External Data Source\"\n            }),\n            /*#__PURE__*/ _jsxs(\"div\", {\n                className: \"d-flex flex-column flex-sm-row justify-content-between\",\n                children: [\n                    /*#__PURE__*/ _jsx(\"div\", {\n                        className: \"column-1 mb-2 me-sm-2\",\n                        children: /*#__PURE__*/ _jsx(\"div\", {\n                            className: \"mt-2 mb-2\",\n                            children: [\n                                /*#__PURE__*/ _jsx(\"div\", {\n                                    children: \"Recent import history:\"\n                                }, \"label\"),\n                                ...lastImport.map((i)=>/*#__PURE__*/ _jsx(\"div\", {\n                                        className: \"pt-1\",\n                                        children: i\n                                    }, i))\n                            ]\n                        })\n                    }),\n                    /*#__PURE__*/ _jsxs(\"div\", {\n                        className: \"column-2\",\n                        children: [\n                            /*#__PURE__*/ _jsx(\"div\", {\n                                className: \"mb-2\",\n                                children: /*#__PURE__*/ _jsx(ExtSourceInput, {\n                                    onChangeInput: onChangeInputCB,\n                                    onChangeTrust: onChangeTrustCB\n                                })\n                            }),\n                            /*#__PURE__*/ _jsxs(\"div\", {\n                                className: \"d-flex justify-content-center\",\n                                children: [\n                                    /*#__PURE__*/ _jsx(\"div\", {\n                                        className: \"px-1\",\n                                        children: /*#__PURE__*/ _jsxs(Button, {\n                                            \"aria-label\": \"Import Datasets\",\n                                            variant: \"outlined\",\n                                            size: \"small\",\n                                            disabled: userInputError || localServiceURL === \"\" || userTrust !== true || imported === true,\n                                            onClick: importDatasetsCB,\n                                            children: [\n                                                imported ? /*#__PURE__*/ _jsx(CheckCircleIcon, {\n                                                    size: \"small\",\n                                                    className: \"pe-1\"\n                                                }) : /*#__PURE__*/ _jsx(DownloadIcon, {\n                                                    size: \"small\",\n                                                    className: \"pe-1\"\n                                                }),\n                                                \"Datasets\"\n                                            ]\n                                        })\n                                    }),\n                                    /*#__PURE__*/ _jsx(\"div\", {\n                                        className: \"px-1\",\n                                        children: /*#__PURE__*/ _jsxs(Button, {\n                                            \"aria-label\": \"Import User Configuration\",\n                                            variant: \"outlined\",\n                                            size: \"small\",\n                                            disabled: getExternalSourceType(localServiceURL) !== ExternalSourceType.LocalService || userInputError || localServiceURL === \"\" || !userTrust || importedConfig === true,\n                                            onClick: importUserConfigCB,\n                                            children: [\n                                                importedConfig ? /*#__PURE__*/ _jsx(CheckCircleIcon, {\n                                                    size: \"small\",\n                                                    className: \"pe-1\"\n                                                }) : /*#__PURE__*/ _jsx(DownloadIcon, {\n                                                    size: \"small\",\n                                                    className: \"pe-1\"\n                                                }),\n                                                \"Config\"\n                                            ]\n                                        })\n                                    }),\n                                    /*#__PURE__*/ _jsx(\"div\", {\n                                        className: \"px-1\",\n                                        children: /*#__PURE__*/ _jsxs(Button, {\n                                            \"aria-label\": \"Backup Datasets\",\n                                            variant: \"outlined\",\n                                            size: \"small\",\n                                            disabled: getExternalSourceType(localServiceURL) !== ExternalSourceType.LocalService || userInputError || localServiceURL === \"\" || userTrust !== true || backedUp === true,\n                                            onClick: backUpCB,\n                                            children: [\n                                                backedUp ? /*#__PURE__*/ _jsx(CheckCircleIcon, {\n                                                    size: \"small\",\n                                                    className: \"pe-1\"\n                                                }) : /*#__PURE__*/ _jsx(UploadIcon, {\n                                                    size: \"small\",\n                                                    className: \"pe-1\"\n                                                }),\n                                                \"Backup\"\n                                            ]\n                                        })\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n}\n"],"names":["SettingsDeveloper","dispatch","useDispatch","cookies","debug","localServiceURL","lastImport","useConnectSetting","userInputError","setUserInputError","useState","userTrust","setUserTrust","backedUp","setBackedUp","imported","setImported","importedConfig","setImportedSettings","spin","setSpin","hardRefreshUnavailable","setHardRefreshUnavailable","importDatasetsCB","useCallback","confirm","type","getExternalSourceType","ExternalSourceType","setLocalDataEdited","importDatasets","unwrap","then","workbook","openIDB","db","putIDBItem","store","IDBStores","key","clearVocabulary","clearPhrases","clearKanji","clearParticleGame","clearOpposites","setLastImport","Date","toJSON","importUserConfigCB","importSettings","backUpCB","settingsBakP","Promise","resolve","reject","lsSettings","getLocalStorageSettings","localStorageKey","e","logger","DebugLevel","saveSettingsLocalService","catch","all","getDatasets","obj","map","sheetObj","saveSheetLocalService","s","onChangeInputCB","valid","onChangeTrustCB","trust","children","className","disabled","active","action","buildAction","debugToggled","color","statusText","labelOptions","id","clickable","style","height","onClick","setTimeout","swMessageDoHardRefresh","undefined","SyncIcon","size","i","onChangeInput","onChangeTrust","Button","variant","CheckCircleIcon","DownloadIcon","UploadIcon"],"mappings":"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"}