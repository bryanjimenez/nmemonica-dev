{"version":3,"file":"413.7cdde4ca.js","sources":["webpack://nmemonica/./src/components/Form/SettingsDeveloper.tsx"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport { sheetDataToJSON } from \"@nmemonica/snservice/src/helper/jsonHelper\";\nimport {\n  CheckCircleIcon,\n  DownloadIcon,\n  SyncIcon,\n  UploadIcon,\n} from \"@primer/octicons-react\";\nimport classNames from \"classnames\";\nimport { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport ExtSourceInput, {\n  ExternalSourceType,\n  getExternalSourceType,\n} from \"./ExtSourceInput\";\nimport SettingsSwitch from \"./SettingsSwitch\";\nimport { dataServiceEndpoint } from \"../../../environment.development\";\nimport { IDBStores, openIDB, putIDBItem } from \"../../../pwa/helper/idbHelper\";\nimport { localStorageKey } from \"../../constants/paths\";\nimport { buildAction } from \"../../helper/eventHandlerHelper\";\nimport { labelOptions } from \"../../helper/gameHelper\";\nimport { getLocalStorageSettings } from \"../../helper/localStorageHelper\";\nimport {\n  swMessageDoHardRefresh,\n  swMessageSaveDataJSON,\n} from \"../../helper/serviceWorkerHelper\";\n// import { useSubscribe } from \"../../hooks/useSubscribe\";\nimport { useConnectSetting } from \"../../hooks/useConnectSettings\";\nimport { type AppDispatch } from \"../../slices\";\nimport {\n  debugToggled,\n  importSettings,\n  logger,\n  setLastImport,\n  setLocalDataEdited,\n} from \"../../slices/globalSlice\";\nimport { clearKanji } from \"../../slices/kanjiSlice\";\nimport { clearOpposites } from \"../../slices/oppositeSlice\";\nimport { clearParticleGame } from \"../../slices/particleSlice\";\nimport { clearPhrases } from \"../../slices/phraseSlice\";\nimport { DebugLevel } from \"../../slices/settingHelper\";\nimport {\n  getDatasets,\n  importDatasets,\n  saveSettingsLocalService,\n  saveSheetLocalService,\n} from \"../../slices/sheetSlice\";\nimport {\n  VersionInitSlice,\n  setSwVersions,\n  setVersion,\n} from \"../../slices/versionSlice\";\nimport { clearVocabulary } from \"../../slices/vocabularySlice\";\n\nexport default function SettingsDeveloper() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { cookies, debug, localServiceURL, lastImport } = useConnectSetting();\n\n  const [userInputError, setUserInputError] = useState(false);\n  const [userTrust, setUserTrust] = useState<boolean | null>(false);\n\n  const [imported, setImported] = useState<boolean | null>(false);\n  const [importedConfig, setImportedSettings] = useState<boolean | null>(false);\n  const [backedUp, setBackedUp] = useState<boolean | null>(false);\n\n  const [spin, setSpin] = useState(false);\n  const [hardRefreshUnavailable, setHardRefreshUnavailable] = useState(false);\n\n  // const serviceAddress = useRef(localServiceURL);\n  // const { registerCB } = useSubscribe(dispatch, serviceAddress);\n\n  const importDatasetsCB = useCallback(() => {\n    if (!confirm(\"User edited datasets will be overwritten\")) {\n      return;\n    }\n\n    const type = getExternalSourceType(localServiceURL);\n    if (type === ExternalSourceType.Unset) {\n      // FIXME: this is not possible\n      // fetch cache.json\n      void dispatch(setLocalDataEdited(false));\n    } else {\n      // don't fetch cache.json\n      void dispatch(setLocalDataEdited(true));\n    }\n\n    void dispatch(importDatasets())\n      .unwrap()\n      .then((obj) => {\n        return Promise.all(\n          obj.map((sheetObj) => {\n            const { data, hash } = sheetDataToJSON(sheetObj);\n            const name = sheetObj.name.toLowerCase() as keyof VersionInitSlice;\n            dispatch(setVersion({ name, hash }));\n\n            return swMessageSaveDataJSON(\n              dataServiceEndpoint + \"/\" + name + \".json.v\" + hash,\n              data,\n            ).then(() => sheetObj);\n          })\n        ).then((workbook) => {\n          // store workbook in indexedDB\n          void openIDB().then((db) =>\n            putIDBItem(\n              { db, store: IDBStores.WORKBOOK },\n              { key: \"0\", workbook }\n            )\n          );\n\n          // update service worker versions\n          return dispatch(setSwVersions());\n        });\n      })\n      .then(() => {\n        // clear saved data states\n        dispatch(clearVocabulary());\n        dispatch(clearPhrases());\n        dispatch(clearKanji());\n        dispatch(clearParticleGame());\n        dispatch(clearOpposites());\n\n        setImported(true);\n        dispatch(\n          setLastImport(\n            `${[\"Reset\", \"Local\", \"GitHub\"][type]}: ${new Date().toJSON()}`\n          )\n        );\n      });\n  }, [dispatch, localServiceURL]);\n\n  const importUserConfigCB = useCallback(() => {\n    if (!confirm(\"User settings will be overwritten\")) {\n      return;\n    }\n\n    void dispatch(importSettings()).then(() => {\n      setImportedSettings(true);\n    });\n  }, [dispatch]);\n\n  const backUpCB = useCallback(() => {\n    if (!confirm(\"Back up:\\n - Datasets\\n - Settings\\n\\nto local service?\")) {\n      return;\n    }\n\n    const settingsBakP = new Promise<void>((resolve, reject) => {\n      let lsSettings;\n      try {\n        lsSettings = getLocalStorageSettings(localStorageKey);\n      } catch (e) {\n        dispatch(logger(\"Failed settings backup\", DebugLevel.ERROR));\n      }\n\n      if (!lsSettings) {\n        resolve();\n        return;\n      }\n      saveSettingsLocalService(lsSettings, localServiceURL)\n        .then(() => resolve)\n        .catch(() => reject);\n    });\n\n    const sheetsBakP = dispatch(getDatasets())\n      .unwrap()\n      .then((obj) =>\n        obj.map((sheetObj) => saveSheetLocalService(sheetObj, localServiceURL))\n      )\n      .then((s) => Promise.all(s));\n\n    void Promise.all([settingsBakP, sheetsBakP]).then(() => {\n      setBackedUp(true);\n    });\n  }, [dispatch, localServiceURL]);\n\n  const onChangeInputCB = useCallback((valid: boolean) => {\n    setUserInputError(valid);\n  }, []);\n\n  const onChangeTrustCB = useCallback((trust: boolean | null) => {\n    setUserTrust(trust);\n    if (!trust) {\n      setImported(null);\n      setBackedUp(null);\n    }\n  }, []);\n\n  return (\n    <div>\n      <h3 className=\"mt-3 mb-1\"></h3>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <div className=\"column-1 mb-2 me-sm-2\"></div>\n\n        <div className=\"column-2\">\n          <div className=\"ps-2 d-flex flex-column align-items-end\">\n            <div className=\"setting-block mb-2\">\n              <SettingsSwitch\n                disabled={!cookies}\n                active={debug > DebugLevel.OFF}\n                action={buildAction(dispatch, debugToggled)}\n                color=\"default\"\n                statusText={labelOptions(debug, [\n                  \"Debug\",\n                  \"Debug Error\",\n                  \"Debug Warn\",\n                  \"Debug\",\n                ])}\n              />\n            </div>\n            <div\n              className={classNames({\n                \"d-flex justify-content-end mb-2\": true,\n                \"disabled-color\": hardRefreshUnavailable,\n              })}\n            >\n              <p\n                id=\"hard-refresh\"\n                className={classNames({\n                  \"text-right\": true,\n                  \"disabled-color\": !cookies,\n                })}\n              >\n                Hard Refresh\n              </p>\n              <div\n                className={classNames({\n                  \"spin-a-bit\": spin,\n                  \"disabled-color\": !cookies,\n                  clickable: cookies,\n                })}\n                style={{ height: \"24px\" }}\n                aria-labelledby=\"hard-refresh\"\n                onClick={\n                  cookies\n                    ? () => {\n                        setSpin(true);\n                        setHardRefreshUnavailable(false);\n\n                        setTimeout(() => {\n                          if (spin) {\n                            setSpin(false);\n                            setHardRefreshUnavailable(true);\n                          }\n                        }, 3000);\n\n                        void swMessageDoHardRefresh();\n                      }\n                    : undefined\n                }\n              >\n                <SyncIcon size={24} aria-label=\"Hard Refresh\" />\n              </div>\n            </div>{\" \"}\n          </div>\n        </div>\n      </div>\n      <h3 className=\"mt-3 mb-1 fw-light\">External Data Source</h3>\n\n      {/* <div className=\"text-end\">\n        <p>\n          Read our <Link to={CookiePolicyMeta.location}>Cookie Policy</Link>.\n        </p>\n      </div> */}\n      <div className=\"d-flex flex-column flex-sm-row justify-content-between\">\n        <div className=\"column-1 mb-2 me-sm-2\">\n          <div className=\"mt-2 mb-2\">\n            {[\n              <div key=\"label\">Recent import history:</div>,\n              ...lastImport.map((i) => (\n                <div key={i} className=\"pt-1\">\n                  {i}\n                </div>\n              )),\n            ]}\n          </div>\n        </div>\n\n        <div className=\"column-2\">\n          <div className=\"mb-2\">\n            <ExtSourceInput\n              onChangeInput={onChangeInputCB}\n              onChangeTrust={onChangeTrustCB}\n            />\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"px-1\">\n              <Button\n                aria-label=\"Import Datasets\"\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={\n                  userInputError ||\n                  localServiceURL === \"\" ||\n                  userTrust !== true ||\n                  imported === true\n                }\n                onClick={importDatasetsCB}\n              >\n                {imported ? (\n                  <CheckCircleIcon size=\"small\" className=\"pe-1\" />\n                ) : (\n                  <DownloadIcon size=\"small\" className=\"pe-1\" />\n                )}\n                Datasets\n              </Button>\n            </div>\n            {/* <div className=\"px-1\">\n              <Button\n                aria-label=\"Edit Datasets\"\n                variant=\"contained\"\n                size=\"small\"\n                disabled={\n                  userInputError || localServiceURL === \"\" || !userTrust\n                }\n              >\n                <Link to={\"/sheet\"} className=\"text-decoration-none\">\n                  Edit <UndoIcon />\n                </Link>\n              </Button>\n            </div> */}\n            <div className=\"px-1\">\n              <Button\n                aria-label=\"Import User Configuration\"\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={\n                  getExternalSourceType(localServiceURL) !==\n                    ExternalSourceType.LocalService ||\n                  userInputError ||\n                  localServiceURL === \"\" ||\n                  !userTrust ||\n                  importedConfig === true\n                }\n                onClick={importUserConfigCB}\n              >\n                {importedConfig ? (\n                  <CheckCircleIcon size=\"small\" className=\"pe-1\" />\n                ) : (\n                  <DownloadIcon size=\"small\" className=\"pe-1\" />\n                )}\n                Config\n              </Button>\n            </div>\n            <div className=\"px-1\">\n              <Button\n                aria-label=\"Backup Datasets\"\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={\n                  getExternalSourceType(localServiceURL) !==\n                    ExternalSourceType.LocalService ||\n                  userInputError ||\n                  localServiceURL === \"\" ||\n                  userTrust !== true ||\n                  backedUp === true\n                }\n                onClick={backUpCB}\n              >\n                {backedUp ? (\n                  <CheckCircleIcon size=\"small\" className=\"pe-1\" />\n                ) : (\n                  <UploadIcon size=\"small\" className=\"pe-1\" />\n                )}\n                Backup\n              </Button>\n            </div>\n\n            {/* <div className=\"px-1\">\n              <Button\n                aria-label=\"Subscribe\"\n                variant=\"outlined\"\n                onClick={registerCB}\n                size=\"small\"\n                disabled={\n                  userInputError || localServiceURL === \"\" || !userTrust\n                }\n              >\n                Subscribe\n              </Button>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["SettingsDeveloper","dispatch","useDispatch","cookies","debug","localServiceURL","lastImport","useConnectSetting","userInputError","setUserInputError","useState","userTrust","setUserTrust","imported","setImported","importedConfig","setImportedSettings","backedUp","setBackedUp","spin","setSpin","hardRefreshUnavailable","setHardRefreshUnavailable","importDatasetsCB","useCallback","confirm","type","getExternalSourceType","ExternalSourceType","setLocalDataEdited","importDatasets","unwrap","then","obj","Promise","all","map","sheetObj","data","hash","sheetDataToJSON","name","toLowerCase","setVersion","swMessageSaveDataJSON","dataServiceEndpoint","workbook","openIDB","db","putIDBItem","store","IDBStores","key","setSwVersions","clearVocabulary","clearPhrases","clearKanji","clearParticleGame","clearOpposites","setLastImport","Date","toJSON","importUserConfigCB","importSettings","backUpCB","settingsBakP","resolve","reject","lsSettings","getLocalStorageSettings","localStorageKey","e","logger","DebugLevel","saveSettingsLocalService","catch","getDatasets","saveSheetLocalService","s","onChangeInputCB","valid","onChangeTrustCB","trust","className","disabled","active","action","buildAction","debugToggled","color","statusText","labelOptions","id","clickable","style","height","onClick","setTimeout","swMessageDoHardRefresh","undefined","SyncIcon","size","i","onChangeInput","onChangeTrust","Button","variant","CheckCircleIcon","DownloadIcon","UploadIcon"],"mappings":"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"}