{"version":3,"file":"534.3f1f0880.js","sources":["webpack://nmemonica/./src/components/Form/SettingsStats.tsx","webpack://nmemonica/./src/helper/statsHelper.ts"],"sourcesContent":["import { Suspense, lazy, useMemo } from \"react\";\n\nimport { NotReady } from \"./NotReady\";\nimport {\n  getDifficultyCounts,\n  getLastViewCounts,\n  getRecallCounts,\n  getStalenessCounts,\n} from \"../../helper/statsHelper\";\nimport { useConnectKanji } from \"../../hooks/useConnectKanji\";\nimport { useConnectPhrase } from \"../../hooks/useConnectPhrase\";\nimport { useConnectVocabulary } from \"../../hooks/useConnectVocabulary\";\n\nconst SettingsStale = lazy(() => import(\"../Form/SettingsStale\"));\nconst SettingsFailedFurigana = lazy(\n  () => import(\"../Form/SettingsFailedFurigana\")\n);\n\nexport default function SettingsStats() {\n  const { repetition: phraseRep } = useConnectPhrase();\n  const { repetition: vocabRep } = useConnectVocabulary();\n  const { repetition: kanjiRep } = useConnectKanji();\n\n  const numberOfDays = 5;\n  const {\n    phraseC,\n    vocabC,\n    kanjiC,\n    phraseR,\n    vocabR,\n    kanjiR,\n    phraseQ,\n    vocabQ,\n    kanjiQ,\n    phraseD,\n    vocabD,\n    kanjiD,\n  } = useMemo(() => {\n    return {\n      phraseC: getLastViewCounts(phraseRep, numberOfDays),\n      vocabC: getLastViewCounts(vocabRep, numberOfDays),\n      kanjiC: getLastViewCounts(kanjiRep, numberOfDays),\n\n      phraseR: getRecallCounts(phraseRep),\n      vocabR: getRecallCounts(vocabRep),\n      kanjiR: getRecallCounts(kanjiRep),\n\n      phraseQ: getStalenessCounts(phraseRep),\n      vocabQ: getStalenessCounts(vocabRep),\n      kanjiQ: getStalenessCounts(kanjiRep),\n\n      phraseD: getDifficultyCounts(phraseRep),\n      vocabD: getDifficultyCounts(vocabRep),\n      kanjiD: getDifficultyCounts(kanjiRep),\n    };\n  }, [phraseRep, vocabRep, kanjiRep]);\n\n  const oneDay = 1000 * 60 * 60 * 24;\n  const daysOW = phraseC.map((v, i) => {\n    return new Date(Date.now() - oneDay * i).toLocaleString(\"en-us\", {\n      weekday: \"short\",\n    });\n  });\n\n  const el = (\n    <div className=\"outer\">\n      <div className=\"d-flex flex-column flex-sm-row justify-content-between\">\n        <div className=\"column-1 text-end\">\n          <table className=\"w-50\">\n            <thead>\n              <tr>\n                <th>Recall</th>\n                <td className=\"p-1\">{\"(0,1)\"}</td>\n                <td className=\"p-1\">{\"[1,2)\"}</td>\n                <td className=\"p-1\">2.0</td>\n                <td className=\"p-1\">-1</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Phrases:</td>\n                <td>{phraseR.pending}</td>\n                <td>{phraseR.due}</td>\n                <td>{phraseR.overdue}</td>\n                <td>{phraseR.wrong}</td>\n              </tr>\n              <tr>\n                <td>Vocabulary:</td>\n                <td>{vocabR.pending}</td>\n                <td>{vocabR.due}</td>\n                <td>{vocabR.overdue}</td>\n                <td>{vocabR.wrong}</td>\n              </tr>\n              <tr>\n                <td>Kanji:</td>\n                <td>{kanjiR.pending}</td>\n                <td>{kanjiR.due}</td>\n                <td>{kanjiR.overdue}</td>\n                <td>{kanjiR.wrong}</td>\n              </tr>\n              <tr>\n                <td>{/** Totals */}</td>\n                <td>{phraseR.pending + vocabR.pending + kanjiR.pending}</td>\n                <td>{phraseR.due + vocabR.due + kanjiR.due}</td>\n                <td>{phraseR.overdue + vocabR.overdue + kanjiR.overdue}</td>\n                <td>{phraseR.wrong + vocabR.wrong + kanjiR.wrong}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className=\"column-2 setting-block\">\n          <div className=\"mb-2\">\n            <table className=\"w-50\">\n              <thead>\n                <tr>\n                  <th>Viewed</th>\n                  {daysOW.map((dayOfTheWeek, i) => (\n                    <td key={`${i.toString()} ${dayOfTheWeek}`} className=\"p-1\">\n                      {i === 0 ? \"Today\" : dayOfTheWeek}\n                    </td>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Phrases:</td>\n                  {phraseC.map((count, i) => (\n                    <td key={`${i.toString()} ${count}`}>{count}</td>\n                  ))}\n                </tr>\n                <tr>\n                  <td>Vocabulary:</td>\n                  {vocabC.map((count, i) => (\n                    <td key={`${i.toString()} ${count}`}>{count}</td>\n                  ))}\n                </tr>\n                <tr>\n                  <td>Kanji:</td>\n                  {kanjiC.map((count, i) => (\n                    <td key={`${i.toString()} ${count}`}>{count}</td>\n                  ))}\n                </tr>\n                <tr>\n                  <td>{/** Totals */}</td>\n                  {phraseC.map((el, i) => {\n                    return (\n                      <td key={`total-${daysOW[i]}-${i.toString()}`}>\n                        {(phraseC[i] ?? 0) +\n                          (vocabC[i] ?? 0) +\n                          (kanjiC[i] ?? 0)}\n                      </td>\n                    );\n                  })}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column flex-sm-row justify-content-between mb-2\">\n        <div className=\"column-1 text-end\">\n          <table className=\"w-50\">\n            <thead>\n              <tr>\n                <th>lastView</th>\n                <td className=\"p-1\">new</td>\n                <td className=\"p-1\">mean</td>\n                <td className=\"p-1\">q0</td>\n                <td className=\"p-1\">q1</td>\n                <td className=\"p-1\">q2</td>\n                <td className=\"p-1\">q3</td>\n                <td className=\"p-1\">q4</td>\n              </tr>\n            </thead>\n            <tbody>\n              {phraseQ.range > 0 && (\n                <tr>\n                  <td>Phrases:</td>\n                  <td>{phraseQ.unPlayed}</td>\n                  <td>{phraseQ.mean.toFixed(1)}</td>\n                  <td>{phraseQ.min}</td>\n                  <td>{phraseQ.q1}</td>\n                  <td>{phraseQ.q2}</td>\n                  <td>{phraseQ.q3}</td>\n                  <td>{phraseQ.max}</td>\n                </tr>\n              )}\n              {vocabQ.range > 0 && (\n                <tr>\n                  <td>Vocabulary:</td>\n                  <td>{vocabQ.unPlayed}</td>\n                  <td>{vocabQ.mean.toFixed(1)}</td>\n                  <td>{vocabQ.min}</td>\n                  <td>{vocabQ.q1}</td>\n                  <td>{vocabQ.q2}</td>\n                  <td>{vocabQ.q3}</td>\n                  <td>{vocabQ.max}</td>\n                </tr>\n              )}\n              {kanjiQ.range > 0 && (\n                <tr>\n                  <td>Kanji:</td>\n                  <td>{kanjiQ.unPlayed}</td>\n                  <td>{kanjiQ.mean.toFixed(1)}</td>\n                  <td>{kanjiQ.min}</td>\n                  <td>{kanjiQ.q1}</td>\n                  <td>{kanjiQ.q2}</td>\n                  <td>{kanjiQ.q3}</td>\n                  <td>{kanjiQ.max}</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"column-2 setting-block\"></div>\n      </div>\n      <div className=\"d-flex flex-column flex-sm-row justify-content-between mb-2\">\n        <div className=\"column-1 text-end\">\n          <table className=\"w-50\">\n            <thead>\n              <tr>\n                <th>difficultyP</th>\n                <td className=\"p-1\">0</td>\n                <td className=\"p-1\">11</td>\n                <td className=\"p-1\">21</td>\n                <td className=\"p-1\">31</td>\n                <td className=\"p-1\">41</td>\n                <td className=\"p-1\">51</td>\n                <td className=\"p-1\">61</td>\n                <td className=\"p-1\">71</td>\n                <td className=\"p-1\">81</td>\n                <td className=\"p-1\">91</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Phrases:</td>\n                {phraseD.map((count, i) => (\n                  <td key={`${i.toString()} ${count}`}>{count}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>Vocabulary:</td>\n                {vocabD.map((count, i) => (\n                  <td key={`${i.toString()} ${count}`}>{count}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>Kanji:</td>\n                {kanjiD.map((count, i) => (\n                  <td key={`${i.toString()} ${count}`}>{count}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className=\"column-2 setting-block\"></div>\n      </div>\n\n      <div>\n        <Suspense fallback={<NotReady addlStyle=\"failed-spacerep-view\" />}>\n          <SettingsStale />\n        </Suspense>\n\n        <Suspense fallback={<NotReady addlStyle=\"failed-furigana-view\" />}>\n          <SettingsFailedFurigana />\n        </Suspense>\n      </div>\n    </div>\n  );\n\n  return el;\n}\n","import type { MetaDataObj } from \"nmemonica\";\n\nimport { daysSince } from \"./consoleHelper\";\nimport { SR_CORRECT_TRESHHOLD, getPercentOverdue } from \"./recallHelper\";\n\n/**\n * For every available metadata item a\n * number of days since lastView is calculated\n * @param metaData\n * @param days Number of days from today to include\n */\nexport function getLastViewCounts(\n  metaData: Record<string, MetaDataObj | undefined>,\n  days: number\n) {\n  const valueList = Object.keys(metaData).map((el) => {\n    const lastView = metaData[el]?.lastView;\n    if (lastView === undefined) {\n      return -1;\n    } else {\n      return daysSince(lastView);\n    }\n  });\n\n  let counts: number[] = new Array(days) as number[];\n  counts.fill(0);\n  valueList.forEach((val) => {\n    if (val > -1 && val < days) {\n      counts[val] = counts[val] ? counts[val] + 1 : 1;\n    }\n  });\n\n  return counts;\n}\n\n/**\n * For every available metadata item a\n * count of wrong, overdue, due, pending, and unPlayed\n * is calculated. These are Recall game stats.\n * @param metaData\n */\nexport function getRecallCounts(\n  metaData: Record<string, MetaDataObj | undefined>\n) {\n  let counts = {\n    wrong: 0,\n    overdue: 0,\n    due: 0,\n    pending: 0,\n    unPlayed: 0,\n    values: [],\n  };\n\n  const valueList = Object.keys(metaData).map((el) => {\n    const { lastView, lastReview, accuracyP, daysBetweenReviews } =\n      metaData[el] ?? {};\n\n    /** Don't review items seen today  */\n    const viewedToday = lastView && daysSince(lastView) === 0 ? true : false;\n    const reviewedToday =\n      lastReview && daysSince(lastReview) === 0 ? true : false;\n\n    if (\n      lastReview &&\n      !reviewedToday &&\n      !viewedToday &&\n      typeof accuracyP === \"number\"\n    ) {\n      const daysSinceReview = daysSince(lastReview);\n\n      const percent = getPercentOverdue({\n        accuracy: accuracyP / 100,\n        daysBetweenReviews,\n        daysSinceReview,\n      });\n\n      if (accuracyP < SR_CORRECT_TRESHHOLD * 100) {\n        // wrong\n        counts.wrong += 1;\n      } else {\n        // right\n\n        if (percent === 2) {\n          counts.overdue += 1;\n        } else if (percent >= 1) {\n          counts.due += 1;\n        } else if (percent > 0) {\n          counts.pending += 1;\n        }\n      }\n      return percent;\n    } else if (reviewedToday) {\n      // reviewed today\n      return 0;\n    } else {\n      // never reviewed\n      counts.unPlayed = counts.unPlayed + 1;\n      return -1;\n    }\n  });\n\n  return { ...counts, value: valueList };\n}\n\n/**\n * Get basic stats about lastView\n * @param metaData\n */\nexport function getStalenessCounts(\n  metaData: Record<string, MetaDataObj | undefined>\n) {\n  const numbers = {\n    range: 0,\n    unPlayed: 0,\n    min: Number.MAX_SAFE_INTEGER,\n    max: -1,\n    mean: Number.NaN,\n    q1: Number.NaN,\n    q2: Number.NaN,\n    q3: Number.NaN,\n  };\n  let sum = 0;\n  const valueList = Object.keys(metaData).reduce<number[]>((acc, el) => {\n    const lastView = metaData[el]?.lastView;\n    if (lastView === undefined) {\n      numbers.unPlayed += 1;\n    } else {\n      const n = daysSince(lastView);\n      numbers.min = numbers.min > n ? n : numbers.min;\n      numbers.max = numbers.max < n ? n : numbers.max;\n      sum += n;\n\n      return [...acc, n];\n    }\n\n    return acc;\n  }, []);\n\n  const sorted = [...valueList].sort((a, b) => a - b);\n  numbers.range = valueList.length;\n  numbers.mean = sum / valueList.length;\n  numbers.q1 = sorted[Math.round(valueList.length * 0.25) - 1];\n  numbers.q3 = sorted[Math.round(valueList.length * 0.75) - 1];\n  if (valueList.length % 2 === 0) {\n    numbers.q2 =\n      (sorted[Math.round(valueList.length * 0.5) - 1] +\n        sorted[Math.round(valueList.length * 0.5)]) /\n      2;\n  } else {\n    numbers.q2 = sorted[Math.round(valueList.length * 0.5) - 1];\n  }\n\n  return numbers;\n}\n\nexport function getStats(n: number[]) {\n  const stats = {\n    range: 0,\n    min: Number.MAX_SAFE_INTEGER,\n    max: -1,\n    mean: Number.NaN,\n    q0: Number.MAX_SAFE_INTEGER,\n    q1: Number.NaN,\n    q2: Number.NaN,\n    q3: Number.NaN,\n    q4: Number.MIN_SAFE_INTEGER,\n  };\n\n  const sorted = [...n].sort((a, b) => a - b);\n  const sum = n.reduce((tot, val) => tot + val, 0);\n  const max = Math.max(...n);\n  const min = Math.min(...n);\n\n  stats.range = n.length;\n  stats.mean = sum / n.length;\n  stats.min = min;\n  stats.q0 = min;\n  stats.q1 = sorted[Math.round(n.length * 0.25) - 1];\n  stats.q3 = sorted[Math.round(n.length * 0.75) - 1];\n  stats.q4 = max;\n  stats.max = max;\n  if (n.length % 2 === 0) {\n    stats.q2 =\n      (sorted[Math.round(n.length * 0.5) - 1] +\n        sorted[Math.round(n.length * 0.5)]) /\n      2;\n  } else {\n    stats.q2 = sorted[Math.round(n.length * 0.5) - 1];\n  }\n\n  return stats;\n}\n\n/**\n * For every available metadata item a\n * difficulty range counts are calculated\n * @param metaData\n */\nexport function getDifficultyCounts(\n  metaData: Record<string, MetaDataObj | undefined>\n) {\n  // let unPlayed = 0;\n  let difficultyRange: number[] = new Array(10) as number[];\n  difficultyRange.fill(0);\n\n  Object.keys(metaData).map((el) => {\n    const difficulty = metaData[el]?.difficultyP;\n    if (difficulty === undefined) {\n      // unPlayed += 1;\n      return -1;\n    } else {\n      const index = difficulty / 10 - 1;\n      difficultyRange[index] = difficultyRange[index] + 1;\n\n      return difficulty;\n    }\n  });\n\n  return difficultyRange;\n}\n"],"names":["SettingsStale","lazy","SettingsFailedFurigana","SettingsStats","repetition","phraseRep","useConnectPhrase","vocabRep","useConnectVocabulary","kanjiRep","useConnectKanji","phraseC","vocabC","kanjiC","phraseR","vocabR","kanjiR","phraseQ","vocabQ","kanjiQ","phraseD","vocabD","kanjiD","useMemo","getLastViewCounts","getRecallCounts","getStalenessCounts","getDifficultyCounts","daysOW","map","v","i","Date","now","oneDay","toLocaleString","weekday","className","pending","due","overdue","wrong","dayOfTheWeek","toString","count","el","range","unPlayed","mean","toFixed","min","q1","q2","q3","max","Suspense","fallback","NotReady","addlStyle","metaData","days","valueList","Object","keys","lastView","undefined","daysSince","counts","Array","fill","forEach","val","values","lastReview","accuracyP","daysBetweenReviews","viewedToday","reviewedToday","daysSinceReview","percent","getPercentOverdue","accuracy","SR_CORRECT_TRESHHOLD","value","numbers","Number","MAX_SAFE_INTEGER","NaN","sum","reduce","acc","n","sorted","sort","a","b","length","Math","round","difficultyRange","difficulty","difficultyP","index"],"mappings":"wPAaA,IAAMA,EAAgB,KAAAC,IAAA,EAAK,IAAM,oCAC3BC,EAAyB,KAAAD,IAAA,EAC7B,IAAM,oCAGO,SAASE,IACtB,GAAM,CAAEC,WAAYC,CAAS,CAAE,CAAG,KAAAC,gBAAA,IAC5B,CAAEF,WAAYG,CAAQ,CAAE,CAAG,KAAAC,oBAAA,IAC3B,CAAEJ,WAAYK,CAAQ,CAAE,CAAG,KAAAC,eAAA,IAG3B,CACJC,QAAAA,CAAO,CACPC,OAAAA,CAAM,CACNC,OAAAA,CAAM,CACNC,QAAAA,CAAO,CACPC,OAAAA,CAAM,CACNC,OAAAA,CAAM,CACNC,QAAAA,CAAO,CACPC,OAAAA,CAAM,CACNC,OAAAA,CAAM,CACNC,QAAAA,CAAO,CACPC,OAAAA,CAAM,CACNC,OAAAA,CAAM,CACP,CAAG,KAAAC,OAAA,EAAQ,IACH,EACLZ,QAAS,KAAAa,iBAAA,EAAkBnB,EAhBV,GAiBjBO,OAAQ,KAAAY,iBAAA,EAAkBjB,EAjBT,GAkBjBM,OAAQ,KAAAW,iBAAA,EAAkBf,EAlBT,GAoBjBK,QAAS,KAAAW,eAAA,EAAgBpB,GACzBU,OAAQ,KAAAU,eAAA,EAAgBlB,GACxBS,OAAQ,KAAAS,eAAA,EAAgBhB,GAExBQ,QAAS,KAAAS,kBAAA,EAAmBrB,GAC5Ba,OAAQ,KAAAQ,kBAAA,EAAmBnB,GAC3BY,OAAQ,KAAAO,kBAAA,EAAmBjB,GAE3BW,QAAS,KAAAO,mBAAA,EAAoBtB,GAC7BgB,OAAQ,KAAAM,mBAAA,EAAoBpB,GAC5Be,OAAQ,KAAAK,mBAAA,EAAoBlB,EAC9B,GACC,CAACJ,EAAWE,EAAUE,EAAS,EAG5BmB,EAASjB,EAAQkB,GAAG,CAAC,CAACC,EAAGC,IACtB,IAAIC,KAAKA,KAAKC,GAAG,GAAKC,AAFhB,MAEyBH,GAAGI,cAAc,CAAC,QAAS,CAC/DC,QAAS,OACX,IAkNF,MA9ME,WAAC,OAAIC,UAAU,Q,UACb,WAAC,OAAIA,UAAU,yD,UACb,UAAC,OAAIA,UAAU,oB,SACb,WAAC,SAAMA,UAAU,O,UACf,UAAC,S,SACC,WAAC,M,UACC,UAAC,M,SAAG,Q,GACJ,UAAC,MAAGA,UAAU,M,SAAO,O,GACrB,UAAC,MAAGA,UAAU,M,SAAO,O,GACrB,UAAC,MAAGA,UAAU,M,SAAM,K,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,QAGxB,WAAC,S,UACC,WAAC,M,UACC,UAAC,M,SAAG,U,GACJ,UAAC,M,SAAIvB,EAAQwB,OAAO,A,GACpB,UAAC,M,SAAIxB,EAAQyB,GAAG,A,GAChB,UAAC,M,SAAIzB,EAAQ0B,OAAO,A,GACpB,UAAC,M,SAAI1B,EAAQ2B,KAAK,A,MAEpB,WAAC,M,UACC,UAAC,M,SAAG,a,GACJ,UAAC,M,SAAI1B,EAAOuB,OAAO,A,GACnB,UAAC,M,SAAIvB,EAAOwB,GAAG,A,GACf,UAAC,M,SAAIxB,EAAOyB,OAAO,A,GACnB,UAAC,M,SAAIzB,EAAO0B,KAAK,A,MAEnB,WAAC,M,UACC,UAAC,M,SAAG,Q,GACJ,UAAC,M,SAAIzB,EAAOsB,OAAO,A,GACnB,UAAC,M,SAAItB,EAAOuB,GAAG,A,GACf,UAAC,M,SAAIvB,EAAOwB,OAAO,A,GACnB,UAAC,M,SAAIxB,EAAOyB,KAAK,A,MAEnB,WAAC,M,UACC,UAAC,SACD,UAAC,M,SAAI3B,EAAQwB,OAAO,CAAGvB,EAAOuB,OAAO,CAAGtB,EAAOsB,OAAO,A,GACtD,UAAC,M,SAAIxB,EAAQyB,GAAG,CAAGxB,EAAOwB,GAAG,CAAGvB,EAAOuB,GAAG,A,GAC1C,UAAC,M,SAAIzB,EAAQ0B,OAAO,CAAGzB,EAAOyB,OAAO,CAAGxB,EAAOwB,OAAO,A,GACtD,UAAC,M,SAAI1B,EAAQ2B,KAAK,CAAG1B,EAAO0B,KAAK,CAAGzB,EAAOyB,KAAK,A,cAKxD,UAAC,OAAIJ,UAAU,yB,SACb,UAAC,OAAIA,UAAU,O,SACb,WAAC,SAAMA,UAAU,O,UACf,UAAC,S,SACC,WAAC,M,UACC,UAAC,M,SAAG,Q,GACHT,EAAOC,GAAG,CAAC,CAACa,EAAcX,IACzB,UAAC,MAA2CM,UAAU,M,SACnDN,AAAM,IAANA,EAAU,QAAUW,C,EADd,CAAC,EAAEX,EAAEY,QAAQ,GAAG,CAAC,EAAED,EAAa,CAAC,G,KAMhD,WAAC,S,UACC,WAAC,M,UACC,UAAC,M,SAAG,U,GACH/B,EAAQkB,GAAG,CAAC,CAACe,EAAOb,IACnB,UAAC,M,SAAqCa,C,EAA7B,CAAC,EAAEb,EAAEY,QAAQ,GAAG,CAAC,EAAEC,EAAM,CAAC,G,GAGvC,WAAC,M,UACC,UAAC,M,SAAG,a,GACHhC,EAAOiB,GAAG,CAAC,CAACe,EAAOb,IAClB,UAAC,M,SAAqCa,C,EAA7B,CAAC,EAAEb,EAAEY,QAAQ,GAAG,CAAC,EAAEC,EAAM,CAAC,G,GAGvC,WAAC,M,UACC,UAAC,M,SAAG,Q,GACH/B,EAAOgB,GAAG,CAAC,CAACe,EAAOb,IAClB,UAAC,M,SAAqCa,C,EAA7B,CAAC,EAAEb,EAAEY,QAAQ,GAAG,CAAC,EAAEC,EAAM,CAAC,G,GAGvC,WAAC,M,UACC,UAAC,SACAjC,EAAQkB,GAAG,CAAC,CAACgB,EAAId,IAEd,UAAC,M,SACG,AAAApB,CAAAA,CAAO,CAACoB,EAAE,EAAI,GACbnB,CAAAA,CAAM,CAACmB,EAAE,EAAI,GACblB,CAAAA,CAAM,CAACkB,EAAE,EAAI,E,EAHT,CAAC,MAAM,EAAEH,CAAM,CAACG,EAAE,CAAC,CAAC,EAAEA,EAAEY,QAAQ,GAAG,CAAC,G,gBAa7D,WAAC,OAAIN,UAAU,8D,UACb,UAAC,OAAIA,UAAU,oB,SACb,WAAC,SAAMA,UAAU,O,UACf,UAAC,S,SACC,WAAC,M,UACC,UAAC,M,SAAG,U,GACJ,UAAC,MAAGA,UAAU,M,SAAM,K,GACpB,UAAC,MAAGA,UAAU,M,SAAM,M,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,QAGxB,WAAC,S,UACEpB,EAAQ6B,KAAK,CAAG,GACf,WAAC,M,UACC,UAAC,M,SAAG,U,GACJ,UAAC,M,SAAI7B,EAAQ8B,QAAQ,A,GACrB,UAAC,M,SAAI9B,EAAQ+B,IAAI,CAACC,OAAO,CAAC,E,GAC1B,UAAC,M,SAAIhC,EAAQiC,GAAG,A,GAChB,UAAC,M,SAAIjC,EAAQkC,EAAE,A,GACf,UAAC,M,SAAIlC,EAAQmC,EAAE,A,GACf,UAAC,M,SAAInC,EAAQoC,EAAE,A,GACf,UAAC,M,SAAIpC,EAAQqC,GAAG,A,MAGnBpC,EAAO4B,KAAK,CAAG,GACd,WAAC,M,UACC,UAAC,M,SAAG,a,GACJ,UAAC,M,SAAI5B,EAAO6B,QAAQ,A,GACpB,UAAC,M,SAAI7B,EAAO8B,IAAI,CAACC,OAAO,CAAC,E,GACzB,UAAC,M,SAAI/B,EAAOgC,GAAG,A,GACf,UAAC,M,SAAIhC,EAAOiC,EAAE,A,GACd,UAAC,M,SAAIjC,EAAOkC,EAAE,A,GACd,UAAC,M,SAAIlC,EAAOmC,EAAE,A,GACd,UAAC,M,SAAInC,EAAOoC,GAAG,A,MAGlBnC,EAAO2B,KAAK,CAAG,GACd,WAAC,M,UACC,UAAC,M,SAAG,Q,GACJ,UAAC,M,SAAI3B,EAAO4B,QAAQ,A,GACpB,UAAC,M,SAAI5B,EAAO6B,IAAI,CAACC,OAAO,CAAC,E,GACzB,UAAC,M,SAAI9B,EAAO+B,GAAG,A,GACf,UAAC,M,SAAI/B,EAAOgC,EAAE,A,GACd,UAAC,M,SAAIhC,EAAOiC,EAAE,A,GACd,UAAC,M,SAAIjC,EAAOkC,EAAE,A,GACd,UAAC,M,SAAIlC,EAAOmC,GAAG,A,cAMzB,UAAC,OAAIjB,UAAU,wB,MAEjB,WAAC,OAAIA,UAAU,8D,UACb,UAAC,OAAIA,UAAU,oB,SACb,WAAC,SAAMA,UAAU,O,UACf,UAAC,S,SACC,WAAC,M,UACC,UAAC,M,SAAG,a,GACJ,UAAC,MAAGA,UAAU,M,SAAM,G,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,GACpB,UAAC,MAAGA,UAAU,M,SAAM,I,QAGxB,WAAC,S,UACC,WAAC,M,UACC,UAAC,M,SAAG,U,GACHjB,EAAQS,GAAG,CAAC,CAACe,EAAOb,IACnB,UAAC,M,SAAqCa,C,EAA7B,CAAC,EAAEb,EAAEY,QAAQ,GAAG,CAAC,EAAEC,EAAM,CAAC,G,GAGvC,WAAC,M,UACC,UAAC,M,SAAG,a,GACHvB,EAAOQ,GAAG,CAAC,CAACe,EAAOb,IAClB,UAAC,M,SAAqCa,C,EAA7B,CAAC,EAAEb,EAAEY,QAAQ,GAAG,CAAC,EAAEC,EAAM,CAAC,G,GAGvC,WAAC,M,UACC,UAAC,M,SAAG,Q,GACHtB,EAAOO,GAAG,CAAC,CAACe,EAAOb,IAClB,UAAC,M,SAAqCa,C,EAA7B,CAAC,EAAEb,EAAEY,QAAQ,GAAG,CAAC,EAAEC,EAAM,CAAC,G,WAM7C,UAAC,OAAIP,UAAU,wB,MAGjB,WAAC,O,UACC,UAAC,EAAAkB,QAAQ,EAACC,SAAU,UAAC,EAAAC,QAAQ,EAACC,UAAU,sB,YACtC,UAAC1D,EAAA,G,GAGH,UAAC,EAAAuD,QAAQ,EAACC,SAAU,UAAC,EAAAC,QAAQ,EAACC,UAAU,sB,YACtC,UAACxD,EAAA,G,QAOX,C,+OCrQO,SAASsB,EACdmC,CAAiD,CACjDC,CAAY,EAEZ,IAAMC,EAAYC,OAAOC,IAAI,CAACJ,GAAU9B,GAAG,CAAC,AAACgB,I,IAC1B,EAAjB,IAAMmB,EAAW,AAAY,OAAZ,GAAAL,CAAQ,CAACd,EAAG,AAAD,GAAX,oBAAcmB,QAAQ,QACvC,AAAIA,AAAaC,KAAAA,IAAbD,EACK,GAEA,KAAAE,SAAA,EAAUF,EAErB,GAEIG,EAAmB,AAAIC,MAAMR,GAQjC,OAPAO,EAAOE,IAAI,CAAC,GACZR,EAAUS,OAAO,CAAC,AAACC,IACbA,EAAM,IAAMA,EAAMX,GACpBO,CAAAA,CAAM,CAACI,EAAI,CAAGJ,CAAM,CAACI,EAAI,CAAGJ,CAAM,CAACI,EAAI,CAAG,EAAI,EAElD,GAEOJ,CACT,CAQO,SAAS1C,EACdkC,CAAiD,EAEjD,IAAIQ,EAAS,CACX1B,MAAO,EACPD,QAAS,EACTD,IAAK,EACLD,QAAS,EACTS,SAAU,EACVyB,OAAQ,EAAE,AACZ,EAEMX,EAAYC,OAAOC,IAAI,CAACJ,GAAU9B,GAAG,CAAC,AAACgB,IAC3C,GAAM,CAAEmB,SAAAA,CAAQ,CAAES,WAAAA,CAAU,CAAEC,UAAAA,CAAS,CAAEC,mBAAAA,CAAkB,CAAE,CAC3DhB,CAAQ,CAACd,EAAG,EAAI,CAAC,EAGb+B,EAAcZ,EAAAA,GAAY,AAAwB,IAAxB,KAAAE,SAAA,EAAUF,GACpCa,EACJJ,EAAAA,GAAc,AAA0B,IAA1B,KAAAP,SAAA,EAAUO,GAE1B,GACEA,CAAAA,GACCI,GACAD,GACD,AAAqB,UAArB,OAAOF,SAyBF,AAAIG,EAEF,GAGPV,EAAOpB,QAAQ,CAAGoB,EAAOpB,QAAQ,CAAG,EAC7B,GA9BP,EACA,IAAM+B,EAAkB,KAAAZ,SAAA,EAAUO,GAE5BM,EAAU,KAAAC,iBAAA,EAAkB,CAChCC,SAAUP,EAAY,IACtBC,mBAAAA,EACAG,gBAAAA,CACF,GAgBA,OAdIJ,EAAY,AAAuB,IAAvB,EAAAQ,oBAAoB,CAElCf,EAAO1B,KAAK,EAAI,EAIZsC,AAAY,IAAZA,EACFZ,EAAO3B,OAAO,EAAI,EACTuC,GAAW,EACpBZ,EAAO5B,GAAG,EAAI,EACLwC,EAAU,GACnBZ,CAAAA,EAAO7B,OAAO,EAAI,GAGfyC,CACT,CAQF,GAEA,MAAO,CAAE,GAAGZ,CAAM,CAAEgB,MAAOtB,CAAU,CACvC,CAMO,SAASnC,EACdiC,CAAiD,EAEjD,IAAMyB,EAAU,CACdtC,MAAO,EACPC,SAAU,EACVG,IAAKmC,OAAOC,gBAAgB,CAC5BhC,IAAK,GACLN,KAAMqC,OAAOE,GAAG,CAChBpC,GAAIkC,OAAOE,GAAG,CACdnC,GAAIiC,OAAOE,GAAG,CACdlC,GAAIgC,OAAOE,GAAG,AAChB,EACIC,EAAM,EACJ3B,EAAYC,OAAOC,IAAI,CAACJ,GAAU8B,MAAM,CAAW,CAACC,EAAK7C,K,IAC5C,EAAjB,IAAMmB,EAAW,AAAY,OAAZ,GAAAL,CAAQ,CAACd,EAAG,AAAD,GAAX,oBAAcmB,QAAQ,CACvC,GAAIA,AAAaC,KAAAA,IAAbD,EACFoB,EAAQrC,QAAQ,EAAI,MACf,CACL,IAAM4C,EAAI,KAAAzB,SAAA,EAAUF,GAKpB,OAJAoB,EAAQlC,GAAG,CAAGkC,EAAQlC,GAAG,CAAGyC,EAAIA,EAAIP,EAAQlC,GAAG,CAC/CkC,EAAQ9B,GAAG,CAAG8B,EAAQ9B,GAAG,CAAGqC,EAAIA,EAAIP,EAAQ9B,GAAG,CAC/CkC,GAAOG,EAEA,IAAID,EAAKC,EAAE,AACpB,CAEA,OAAOD,CACT,EAAG,EAAE,EAECE,EAAS,IAAI/B,EAAU,CAACgC,IAAI,CAAC,CAACC,EAAGC,IAAMD,EAAIC,GAcjD,OAbAX,EAAQtC,KAAK,CAAGe,EAAUmC,MAAM,CAChCZ,EAAQpC,IAAI,CAAGwC,EAAM3B,EAAUmC,MAAM,CACrCZ,EAAQjC,EAAE,CAAGyC,CAAM,CAACK,KAAKC,KAAK,CAACrC,AAAmB,IAAnBA,EAAUmC,MAAM,EAAW,EAAE,CAC5DZ,EAAQ/B,EAAE,CAAGuC,CAAM,CAACK,KAAKC,KAAK,CAACrC,AAAmB,IAAnBA,EAAUmC,MAAM,EAAW,EAAE,CACxDnC,EAAUmC,MAAM,CAAG,GAAM,EAC3BZ,EAAQhC,EAAE,CACP,AAAAwC,CAAAA,CAAM,CAACK,KAAKC,KAAK,CAACrC,AAAmB,GAAnBA,EAAUmC,MAAM,EAAU,EAAE,CAC7CJ,CAAM,CAACK,KAAKC,KAAK,CAACrC,AAAmB,GAAnBA,EAAUmC,MAAM,EAAO,EAC3C,EAEFZ,EAAQhC,EAAE,CAAGwC,CAAM,CAACK,KAAKC,KAAK,CAACrC,AAAmB,GAAnBA,EAAUmC,MAAM,EAAU,EAAE,CAGtDZ,CACT,CA6CO,SAASzD,EACdgC,CAAiD,EAGjD,IAAIwC,EAA4B,AAAI/B,MAAM,IAgB1C,OAfA+B,EAAgB9B,IAAI,CAAC,GAErBP,OAAOC,IAAI,CAACJ,GAAU9B,GAAG,CAAC,AAACgB,I,IACN,EAAnB,IAAMuD,EAAa,AAAY,OAAZ,GAAAzC,CAAQ,CAACd,EAAG,AAAD,GAAX,oBAAcwD,WAAW,CAC5C,GAAID,AAAenC,KAAAA,IAAfmC,EAEF,OAAO,EACF,EACL,IAAME,EAAQF,EAAa,GAAK,EAGhC,OAFAD,CAAe,CAACG,EAAM,CAAGH,CAAe,CAACG,EAAM,CAAG,EAE3CF,CACT,CACF,GAEOD,CACT,C"}