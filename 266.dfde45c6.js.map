{"version":3,"file":"266.dfde45c6.js","sources":["webpack://nmemonica/./src/components/Form/SettingsFailedFurigana.tsx"],"sourcesContent":["import type { RawVocabulary } from \"nmemonica\";\nimport { Suspense, useEffect, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { NotReady } from \"./NotReady\";\nimport { JapaneseText, furiganaParseRetry } from \"../../helper/JapaneseText\";\nimport { useConnectPhrase } from \"../../hooks/useConnectPhrase\";\nimport { useConnectVocabulary } from \"../../hooks/useConnectVocabulary\";\nimport { type AppDispatch } from \"../../slices\";\nimport { getPhrase } from \"../../slices/phraseSlice\";\nimport { getVocabulary } from \"../../slices/vocabularySlice\";\n\nexport default function SettingsFailedFurigana() {\n  const dispatch = useDispatch<AppDispatch>();\n  const { vocabList: vocabulary } = useConnectVocabulary();\n  const { phraseList: phrases } = useConnectPhrase();\n\n  useEffect(() => {\n    if (vocabulary.length === 0) {\n      void dispatch(getVocabulary());\n    }\n    if (phrases.length === 0) {\n      void dispatch(getPhrase());\n    }\n  }, []);\n\n  const failedFurigana = useMemo(\n    () => failedFuriganaList([...phrases, ...vocabulary]),\n    [vocabulary, phrases]\n  );\n\n  const el = (\n    <>\n      {failedFurigana.length > 0 && (\n        <div className=\"mb-2\">\n          <span className=\"fs-5\">Failed Furigana Parse</span>\n          <Suspense fallback={<NotReady addlStyle=\"failed-furigana-view\" />}>\n            <div className=\"failed-furigana-view container mt-2 p-0\">\n              {failedFurigana}\n            </div>\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n\n  return el;\n}\n\nfunction failedFuriganaList(terms: RawVocabulary[]) {\n  return terms.reduce<React.JSX.Element[]>((a, text, i) => {\n    const t = JapaneseText.parse(text);\n    if (t.hasFurigana()) {\n      try {\n        furiganaParseRetry(t.getPronunciation(), t.getSpellingRAW());\n      } catch (e) {\n        if (e instanceof Error && \"cause\" in e) {\n          const errData = e.cause as { code: string; info: unknown };\n          if (errData.code === \"ParseError\" || errData.code === \"InputError\") {\n            const separator = <hr key={`parse-err-sep-${text.uid}`} />;\n\n            const row = (\n              <div key={`parse-err-${text.uid}`} className=\"row\">\n                <span className=\"col p-0\">\n                  {t.toHTML({ showError: false })}\n                </span>\n                <span className=\"col p-0\">{text.english}</span>\n                <span className=\"col p-0 app-sm-fs-xx-small\">\n                  <div>{e.message}</div>\n                  <div>{errData.info ? JSON.stringify(errData.info) : \"\"}</div>\n                </span>\n              </div>\n            );\n\n            return a.length > 0 && i < terms.length - 1\n              ? [...a, separator, row]\n              : [...a, row];\n          }\n        }\n      }\n    }\n    return a;\n  }, []);\n}\n"],"names":["SettingsFailedFurigana","dispatch","useDispatch","vocabList","vocabulary","useConnectVocabulary","phraseList","phrases","useConnectPhrase","useEffect","length","getVocabulary","getPhrase","failedFurigana","useMemo","failedFuriganaList","terms","reduce","a","text","i","t","JapaneseText","hasFurigana","furiganaParseRetry","getPronunciation","getSpellingRAW","e","Error","errData","cause","code","separator","uid","row","className","toHTML","showError","english","message","info","JSON","stringify","Suspense","fallback","NotReady","addlStyle"],"mappings":"mRAYe,SAASA,IACtB,IAAMC,EAAW,KAAAC,WAAA,IACX,CAAEC,UAAWC,CAAU,CAAE,CAAG,KAAAC,oBAAA,IAC5B,CAAEC,WAAYC,CAAO,CAAE,CAAG,KAAAC,gBAAA,IAEhC,KAAAC,SAAA,EAAU,KACkB,IAAtBL,EAAWM,MAAM,EACdT,EAAS,KAAAU,aAAA,KAEO,IAAnBJ,EAAQG,MAAM,EACXT,EAAS,KAAAW,SAAA,IAElB,EAAG,EAAE,EAEL,IAAMC,EAAiB,KAAAC,OAAA,EACrB,IAAMC,AAsBV,UAA4BC,CAAsB,EAChD,OAAOA,EAAMC,MAAM,CAAsB,CAACC,EAAGC,EAAMC,KACjD,IAAMC,EAAI,EAAAC,YAAA,MAAkB,CAACH,GAC7B,GAAIE,EAAEE,WAAW,GACf,GAAI,CACF,KAAAC,kBAAA,EAAmBH,EAAEI,gBAAgB,GAAIJ,EAAEK,cAAc,GAC3D,CAAE,MAAOC,EAAG,CACV,GAAIA,aAAaC,OAAS,UAAWD,EAAG,CACtC,IAAME,EAAUF,EAAEG,KAAK,CACvB,GAAID,AAAiB,eAAjBA,EAAQE,IAAI,EAAqBF,AAAiB,eAAjBA,EAAQE,IAAI,CAAmB,CAClE,IAAMC,EAAY,UAAC,QAAQ,CAAC,cAAc,EAAEb,EAAKc,GAAG,CAAC,CAAC,EAEhDC,EACJ,WAAC,OAAkCC,UAAU,M,UAC3C,UAAC,QAAKA,UAAU,U,SACbd,EAAEe,MAAM,CAAC,CAAEC,UAAW,EAAM,E,GAE/B,UAAC,QAAKF,UAAU,U,SAAWhB,EAAKmB,OAAO,A,GACvC,WAAC,QAAKH,UAAU,6B,UACd,UAAC,O,SAAKR,EAAEY,OAAO,A,GACf,UAAC,O,SAAKV,EAAQW,IAAI,CAAGC,KAAKC,SAAS,CAACb,EAAQW,IAAI,EAAI,E,QAP9C,CAAC,UAAU,EAAErB,EAAKc,GAAG,CAAC,CAAC,EAYnC,OAAOf,EAAER,MAAM,CAAG,GAAKU,EAAIJ,EAAMN,MAAM,CAAG,EACtC,IAAIQ,EAAGc,EAAWE,EAAI,CACtB,IAAIhB,EAAGgB,EAAI,AACjB,CACF,CACF,CAEF,OAAOhB,CACT,EAAG,EAAE,CACP,GAxD6B,IAAIX,KAAYH,EAAW,EACpD,CAACA,EAAYG,EAAQ,EAkBvB,MAdE,sB,SACGM,EAAeH,MAAM,CAAG,GACvB,WAAC,OAAIyB,UAAU,O,UACb,UAAC,QAAKA,UAAU,O,SAAO,uB,GACvB,UAAC,EAAAQ,QAAQ,EAACC,SAAU,UAAC,EAAAC,QAAQ,EAACC,UAAU,sB,YACtC,UAAC,OAAIX,UAAU,0C,SACZtB,C,SASf,C"}