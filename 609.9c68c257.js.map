{"version":3,"file":"609.9c68c257.js","sources":["webpack://nmemonica/./src/components/Form/PlusMinus.tsx?46a9*","webpack://nmemonica/./src/components/Form/SettingsVocab.tsx","webpack://nmemonica/./src/components/Form/SimpleListMenu.tsx?4125**","webpack://nmemonica/./src/components/Form/ThresholdFilterSlider.tsx?399e*","webpack://nmemonica/./src/components/Form/VerbFormSlider.tsx","webpack://nmemonica/./src/components/Pages/SetTermGFList.tsx?c862*","webpack://nmemonica/./src/components/Pages/SetTermGList.tsx?fb29"],"sourcesContent":["import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\ninterface PlusMinusProps {\n  label: string;\n  value: number;\n  onChange: (value: number) => void;\n}\n\nexport default function PlusMinus(props: PlusMinusProps) {\n  const { label, value } = props;\n\n  return (\n    <div\n      className={classNames({\n        \"mb-3 d-flex flex-row justify-content-end\": true,\n      })}\n    >\n      <div>{label}</div>\n      <div\n        className=\"clickable px-2\"\n        onClick={() => {\n          props.onChange(value - 1);\n        }}\n      >\n        -\n      </div>\n      <div\n        className={classNames({\n          \"px-2\": true,\n        })}\n      >\n        {value}\n      </div>\n      <div\n        className=\"clickable px-2\"\n        onClick={() => {\n          props.onChange(value + 1);\n        }}\n      >\n        +\n      </div>\n    </div>\n  );\n}\n\nPlusMinus.propTypes = {\n  value: PropTypes.number,\n};\n","import {\n  ChevronUpIcon,\n  PlusCircleIcon,\n  XCircleIcon,\n} from \"@primer/octicons-react\";\nimport classNames from \"classnames\";\nimport { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { NotReady } from \"./NotReady\";\nimport PlusMinus from \"./PlusMinus\";\nimport SettingsSwitch from \"./SettingsSwitch\";\nimport SimpleListMenu from \"./SimpleListMenu\";\nimport { ThresholdFilterSlider } from \"./ThresholdFilterSlider\";\nimport VerbFormSlider from \"./VerbFormSlider\";\nimport { buildAction } from \"../../helper/eventHandlerHelper\";\nimport { getStaleGroups } from \"../../helper/gameHelper\";\nimport { useConnectVocabulary } from \"../../hooks/useConnectVocabulary\";\nimport type { AppDispatch } from \"../../slices\";\nimport {\n  TermFilterBy,\n  TermSortBy,\n  TermSortByLabel,\n} from \"../../slices/settingHelper\";\nimport {\n  vocabularyInitState as VOCABULARY_INIT,\n  getVocabulary,\n  removeFrequencyWord,\n  setMemorizedThreshold,\n  setSpaRepMaxItemReview,\n  setVerbFormsOrder,\n  toggleAutoVerbView,\n  toggleIncludeNew,\n  toggleIncludeReviewed,\n  toggleVocabularyActiveGrp,\n  toggleVocabularyBareKanji,\n  toggleVocabularyFilter,\n  toggleVocabularyHint,\n  toggleVocabularyOrdering,\n  toggleVocabularyReinforcement,\n  toggleVocabularyRomaji,\n  updateVerbColSplit,\n} from \"../../slices/vocabularySlice\";\nimport { SetTermGFList } from \"../Pages/SetTermGFList\";\nimport { SetTermGList } from \"../Pages/SetTermGList\";\n\nexport default function SettingsVocab() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {\n    vocabList: vocabulary,\n    vocabGroups,\n    sortMethod: vocabOrderRef,\n    romajiEnabled: vocabRomaji,\n    bareKanji: showBareKanji,\n    hintEnabled: vocabHintRef,\n    activeGroup: vocabActive,\n    autoVerbView,\n    verbColSplit,\n    filterType: vocabFilterRef,\n    difficultyThreshold,\n    repetition: vocabRep,\n    spaRepMaxReviewItem,\n    reinforce: vocabReinforceRef,\n    verbFormsOrder,\n    includeNew,\n    includeReviewed,\n  } = useConnectVocabulary();\n\n  const vocabFilter = vocabFilterRef.current;\n  const vocabOrder = vocabOrderRef.current;\n  const vocabReinforce = vocabReinforceRef.current;\n  const vocabHint = vocabHintRef.current;\n\n  if (Object.keys(vocabGroups).length === 0) {\n    void dispatch(getVocabulary());\n  }\n\n  const vocabFreq = useMemo(\n    () => Object.keys(vocabRep).filter((k) => vocabRep[k]?.rein === true),\n    [vocabRep]\n  );\n\n  const [shownForms, hiddenForms] = useMemo(() => {\n    const allForms = VOCABULARY_INIT.setting.verbFormsOrder;\n    const shown = verbFormsOrder.reduce<string[]>((acc, form) => {\n      if (allForms.includes(form)) {\n        acc = [...acc, form];\n      }\n\n      return acc;\n    }, []);\n\n    const hidden = allForms.reduce<string[]>((acc, form) => {\n      if (!shown.includes(form)) {\n        acc = [...acc, form];\n      }\n\n      return acc;\n    }, []);\n\n    return [shown, hidden];\n  }, [verbFormsOrder]);\n\n  if (vocabulary.length < 1 || Object.keys(vocabGroups).length < 1)\n    return <NotReady addlStyle=\"vocabulary-settings\" />;\n\n  const stale = getStaleGroups(vocabGroups, vocabActive);\n  if (stale.length > 0) {\n    const error = new Error(\"Stale vocabulary active group\", {\n      cause: { code: \"StaleVocabActiveGrp\", value: stale },\n    });\n    throw error;\n  }\n\n  const el = (\n    <div className=\"outer\">\n      <div className=\"d-flex flex-row justify-content-between\">\n        <div className=\"column-1\">\n          <SimpleListMenu\n            flip={true}\n            title={\"Filter by:\"}\n            options={[\n              \"Word Group\",\n              \"Frequency List\",\n              // \"NOT_USED_Tags\",\n            ]}\n            initial={vocabFilter}\n            onChange={buildAction(dispatch, toggleVocabularyFilter)}\n          />\n          {vocabFilter === TermFilterBy.GROUP && (\n            <SetTermGList\n              termsGroups={vocabGroups}\n              termsActive={vocabActive}\n              toggleTermActiveGrp={buildAction(\n                dispatch,\n                toggleVocabularyActiveGrp\n              )}\n            />\n          )}\n          {vocabFilter === TermFilterBy.FREQUENCY && vocabFreq.length === 0 && (\n            <div className=\"fst-italic\">No words have been chosen</div>\n          )}\n          {vocabFilter === TermFilterBy.FREQUENCY && vocabFreq.length > 0 && (\n            <SetTermGFList\n              termsActive={vocabActive}\n              termsFreq={vocabFreq}\n              terms={vocabulary}\n              removeFrequencyTerm={buildAction(dispatch, removeFrequencyWord)}\n              toggleTermActiveGrp={buildAction(\n                dispatch,\n                toggleVocabularyActiveGrp\n              )}\n            />\n          )}\n        </div>\n\n        <div className=\"column-2 setting-block\">\n          <SimpleListMenu\n            title={\"Sort by:\"}\n            options={TermSortByLabel}\n            initial={vocabOrder}\n            onChange={(index) => {\n              if (TermSortBy.RECALL === index) {\n                dispatch(toggleVocabularyReinforcement(false));\n              }\n              return buildAction(dispatch, toggleVocabularyOrdering)(index);\n            }}\n          />\n\n          <div className=\"d-flex justify-content-end\">\n            <ThresholdFilterSlider\n              threshold={difficultyThreshold}\n              setThreshold={buildAction(dispatch, setMemorizedThreshold)}\n            />\n          </div>\n          {vocabOrder === TermSortBy.RECALL && (\n            <PlusMinus\n              label=\"Max review items \"\n              value={spaRepMaxReviewItem}\n              onChange={(value: number) => {\n                dispatch(setSpaRepMaxItemReview(value));\n              }}\n            />\n          )}\n          {vocabOrder === TermSortBy.VIEW_DATE && (\n            <>\n              <div className=\"mb-2\">\n                <SettingsSwitch\n                  active={includeNew}\n                  action={buildAction(dispatch, toggleIncludeNew)}\n                  statusText=\"Staleness +New\"\n                />\n              </div>\n              <div className=\"mb-2\">\n                <SettingsSwitch\n                  active={includeReviewed}\n                  action={buildAction(dispatch, toggleIncludeReviewed)}\n                  statusText=\"Staleness +Reviewed\"\n                />\n              </div>\n            </>\n          )}\n          <div className=\"mb-2\">\n            <SettingsSwitch\n              active={vocabReinforce}\n              action={buildAction(dispatch, toggleVocabularyReinforcement)}\n              disabled={\n                vocabFilter === TermFilterBy.FREQUENCY ||\n                vocabOrder === TermSortBy.RECALL\n              }\n              statusText=\"Reinforcement\"\n            />\n          </div>\n          <div className=\"mb-2\">\n            <SettingsSwitch\n              active={vocabRomaji}\n              action={buildAction(dispatch, toggleVocabularyRomaji)}\n              statusText=\"Romaji\"\n            />\n          </div>\n          <div className=\"mb-2\">\n            <SettingsSwitch\n              active={showBareKanji}\n              action={buildAction(dispatch, toggleVocabularyBareKanji)}\n              statusText=\"English+Kanji\"\n            />\n          </div>\n          <div className=\"mb-2\">\n            <SettingsSwitch\n              active={vocabHint}\n              action={buildAction(dispatch, toggleVocabularyHint)}\n              statusText=\"Hint\"\n            />\n          </div>\n          <div className=\"mb-2\">\n            <SettingsSwitch\n              active={autoVerbView}\n              action={buildAction(dispatch, toggleAutoVerbView)}\n              statusText=\"Auto Verb View\"\n            />\n          </div>\n          {autoVerbView && (\n            <div className=\"mb-2\">\n              <div className=\"d-flex flex-row justify-content-end\">\n                <div>\n                  {[\n                    shownForms.map((form, k) => (\n                      <div\n                        key={form}\n                        className={classNames({\n                          \"d-flex justify-content-between\": true,\n                          \"pt-2\": k === shownForms.length - verbColSplit,\n                          \"pb-2\":\n                            k === shownForms.length - 1 && verbColSplit === 0,\n                        })}\n                      >\n                        <div\n                          className={classNames({\n                            \"me-3\": true,\n                            \"disabled-color\": k === 0,\n                          })}\n                          onClick={() => {\n                            if (k > 0) {\n                              const a = shownForms.slice(0, k - 1);\n                              const b = shownForms[k - 1];\n                              const x = shownForms[k];\n                              const c = shownForms.slice(k + 1);\n\n                              dispatch(setVerbFormsOrder([...a, x, b, ...c]));\n                            }\n                          }}\n                        >\n                          <ChevronUpIcon\n                            className=\"mt-1\"\n                            size=\"small\"\n                            aria-label=\"move up\"\n                          />\n                        </div>\n                        <span className=\"w-100 text-start\">{form}</span>\n\n                        <div\n                          onClick={() => {\n                            if (shownForms.length > 1) {\n                              const minusK = [\n                                ...shownForms.slice(0, k),\n                                ...shownForms.slice(k + 1),\n                              ];\n\n                              dispatch(setVerbFormsOrder(minusK));\n                            }\n                          }}\n                        >\n                          <XCircleIcon\n                            className={classNames({\n                              \"mt-1 ms-3\": true,\n                              \"incorrect-color\": shownForms.length > 1,\n                              \"disabled-color\": shownForms.length === 1,\n                            })}\n                            size=\"small\"\n                            aria-label=\"remove\"\n                          />\n                        </div>\n                      </div>\n                    )),\n                    hiddenForms.map((form, k) => (\n                      <div\n                        key={form}\n                        className=\"d-flex justify-content-between\"\n                      >\n                        <div className=\"me-3 invisible\">\n                          <ChevronUpIcon\n                            className=\"mt-1\"\n                            size=\"small\"\n                            aria-label=\"move up\"\n                          />\n                        </div>\n                        <span className=\"w-100 text-start disabled-color\">\n                          {form}\n                        </span>\n                        <div\n                          onClick={buildAction(dispatch, setVerbFormsOrder, [\n                            ...shownForms,\n                            hiddenForms[k],\n                          ])}\n                        >\n                          <PlusCircleIcon\n                            className=\"mt-1 ms-3\"\n                            size=\"small\"\n                            aria-label=\"add\"\n                          />\n                        </div>\n                      </div>\n                    )),\n                  ]}\n                </div>\n              </div>\n            </div>\n          )}\n          {autoVerbView && (\n            <div>\n              <div className=\"d-flex justify-content-end p-2\">\n                <VerbFormSlider\n                  initial={shownForms.length - verbColSplit}\n                  setChoiceN={(slip: number) => {\n                    dispatch(updateVerbColSplit(shownForms.length - slip));\n                  }}\n                  max={verbFormsOrder.length}\n                  statusText=\"Column layout\"\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  return el;\n}\n","import {\n  IconButton,\n  List,\n  ListItemButton,\n  ListItemText,\n  Menu,\n  MenuItem,\n} from \"@mui/material\";\nimport { KebabHorizontalIcon } from \"@primer/octicons-react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\ninterface SimpleListMenuProps {\n  /** Whether menu is interdisabled */\n  disabled?: boolean; //\n  /** Whether elipsis and options are horizontally reversed */\n  flip?: boolean;\n  title: string;\n  options: string[];\n  allowed?: number[];\n  initial: number;\n  onChange: (index: number) => void;\n}\n\nexport default function SimpleListMenu(props: SimpleListMenuProps) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [selectedIndex, setSelectedIndex] = useState(props.initial);\n\n  const optionsRef = useRef(props.options);\n  const allowedRef = useRef(props.allowed ?? props.options.map((o, i) => i));\n  const options = optionsRef.current;\n  const allowed = allowedRef.current;\n\n  useEffect(() => {\n    setSelectedIndex(props.initial);\n  }, [props.initial]);\n\n  const open = Boolean(anchorEl);\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLElement>,\n    index: number\n  ) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    props.onChange(index);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      className={classNames({\n        clickable: props.disabled !== true,\n        \"d-flex\": true,\n        \"flex-row-reverse\": props.flip === true ? true : undefined,\n        \"justify-content-end\": true,\n      })}\n    >\n      <List component=\"nav\" disablePadding={true}>\n        <ListItemButton\n          disableGutters={true}\n          disabled={props.disabled === true}\n          id=\"filter-button\"\n          aria-haspopup=\"listbox\"\n          aria-controls=\"filter-menu\"\n          aria-expanded={open ? \"true\" : undefined}\n          onClick={handleClickListItem}\n        >\n          <ListItemText\n            primary={props.title}\n            secondary={options[selectedIndex]}\n            secondaryTypographyProps={{ color: \"unset\" }}\n          />\n        </ListItemButton>\n      </List>\n      <Menu\n        id=\"filter-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"filter-button\",\n          role: \"listbox\",\n        }}\n      >\n        {options.map((option, index) => (\n          <MenuItem\n            key={option}\n            // disabled={index === 0}\n            selected={index === selectedIndex}\n            onClick={(event) => {\n              if (allowed.includes(index)) handleMenuItemClick(event, index);\n            }}\n          >\n            {allowed.includes(index) ? (\n              option\n            ) : (\n              <span className=\"disabled-color\">{option}</span>\n            )}\n          </MenuItem>\n        ))}\n      </Menu>\n\n      <IconButton\n        aria-labelledby=\"filter-button\"\n        sx={{ color: \"unset\", minWidth: \"55px\" }}\n        aria-haspopup=\"listbox\"\n        disabled={props.disabled === true}\n        onClick={handleClickListItem}\n      >\n        <KebabHorizontalIcon\n          size=\"medium\"\n          className={classNames({\n            \"rotate-transition\": true,\n            \"rotate-90\": open,\n          })}\n        />\n      </IconButton>\n    </div>\n  );\n}\n\nSimpleListMenu.propTypes = {\n  disabled: PropTypes.bool,\n  flip: PropTypes.bool,\n  title: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.string),\n  initial: PropTypes.number,\n  onChange: PropTypes.func,\n};\n","import { Slider } from \"@mui/material\";\nimport { SortAscIcon, SortDescIcon } from \"@primer/octicons-react\";\nimport PropTypes from \"prop-types\";\nimport { useCallback, useState } from \"react\";\n\nimport { heatMap } from \"../../helper/colorHelper\";\nimport { DIFFICULTY_THRLD, MEMORIZED_THRLD } from \"../../helper/sortHelper\";\n\ninterface ThresholdFilterSliderProps {\n  threshold: number;\n  setThreshold: (value: number) => void;\n}\n\nexport function ThresholdFilterSlider(props: ThresholdFilterSliderProps) {\n  const { threshold, setThreshold } = props;\n  const [defaultValue] = useState(Math.abs(threshold));\n\n  const c = heatMap(Math.abs(threshold) / 100, 0.75);\n  const difficultyMarks = [\n    {\n      value: MEMORIZED_THRLD,\n      // label: \"memorized\"\n    },\n    {\n      value: DIFFICULTY_THRLD,\n      // label: \"difficult\",\n    },\n  ];\n\n  const flipThresholdCB = useCallback(() => {\n    setThreshold(-1 * threshold);\n  }, [setThreshold, threshold]);\n\n  return (\n    <>\n      <div\n        className=\"position-relative text-nowrap w-0 fs-x-small\"\n        style={{ top: \"-15px\" }}\n      >\n        {`Difficulty filter: ${threshold}`}\n      </div>\n      <Slider\n        sx={{ color: c }}\n        defaultValue={defaultValue}\n        marks={difficultyMarks}\n        track={threshold < 0 ? undefined : \"inverted\"}\n        onChangeCommitted={(e, newValue) => {\n          const sign = threshold < 0 ? -1 : 1;\n          if (typeof newValue === \"number\") {\n            if (newValue === 0) {\n              setThreshold(Number(sign));\n            } else {\n              setThreshold(sign * newValue);\n            }\n          }\n        }}\n        valueLabelDisplay=\"auto\"\n      />\n\n      <div className=\"mt-2 ms-3 \" onClick={flipThresholdCB}>\n        {threshold < 0 ? <SortAscIcon /> : <SortDescIcon />}\n      </div>\n    </>\n  );\n}\n\nThresholdFilterSlider.propTypes = {\n  threshold: PropTypes.number,\n  setThreshold: PropTypes.func,\n};\n","import { Slider, Typography } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport \"../../css/VerbFormSlider.css\";\n\ninterface Marks {\n  value: number;\n  raw: number;\n}\n\ninterface VerbFormSliderProps {\n  initial: number;\n  max: number;\n  statusText: string;\n  setChoiceN: (slipt: number) => void;\n}\n\nexport default function VerbFormSlider(props: VerbFormSliderProps) {\n  const [initVal] = useState(props.initial);\n\n  const safeInitial = Math.min(props.max, initVal);\n  const max = props.max;\n  const min = 0;\n\n  let marks: Marks[] = [];\n  let marksMap: Record<string, number> = {};\n\n  for (let x = min; x < max + 1; x++) {\n    const slide = ((x - min) / (max - min)) * 100;\n    marks = [...marks, { value: slide, raw: x }];\n    marksMap[\"r\" + slide] = x;\n    marksMap[\"s\" + x] = slide;\n  }\n\n  const slideToRaw = (slide: number) => {\n    return marksMap[\"r\" + slide];\n  };\n\n  const rawToSlide = (raw: number) => {\n    return marksMap[\"s\" + raw];\n  };\n\n  const slideToLabel = (slide: number) => {\n    const idx = slideToRaw(slide);\n    const half = Math.trunc(max / 2);\n\n    let label = \"\";\n    let splt = half + Math.abs(half - idx);\n    if (max % 2 !== 0 && idx <= half) {\n      splt++;\n      label = String(splt);\n    }\n\n    if (max % 2 === 0 && idx === half) {\n      // at the half way point\n    } else if (idx < half + 1) {\n      label = splt + \" \" + (max - splt);\n    } else {\n      label = max - splt + \" \" + splt;\n    }\n\n    return label;\n  };\n\n  const handleChange = (newValue: number) => {\n    const prevVal = safeInitial;\n    const curVal = slideToRaw(newValue);\n\n    if (curVal !== prevVal) {\n      props.setChoiceN(curVal);\n    }\n  };\n\n  return (\n    <div className=\"verb-form-slider-root\">\n      <Typography id=\"discrete-slider-restrict\" gutterBottom>\n        {props.statusText}\n      </Typography>\n      <Slider\n        defaultValue={rawToSlide(safeInitial)}\n        valueLabelFormat={slideToLabel}\n        getAriaValueText={slideToLabel}\n        aria-labelledby=\"discrete-slider-restrict\"\n        track={false}\n        step={null}\n        valueLabelDisplay=\"auto\"\n        marks={marks}\n        onChangeCommitted={(event, newValue) => {\n          if (typeof newValue === \"number\") {\n            handleChange(newValue);\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nVerbFormSlider.propTypes = {\n  statusText: PropTypes.string,\n  initial: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  setChoiceN: PropTypes.func.isRequired,\n};\n","import { IssueDraftIcon, XCircleIcon } from \"@primer/octicons-react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\ninterface MinimunRawItem {\n  uid: string;\n  english: string;\n  grp?: string;\n}\n\ninterface SetTermGFListProps {\n  terms: MinimunRawItem[];\n  termsFreq: string[]; //List of uid of terms to be reinforced/frequency\n  termsActive: string[]; //List of tags that are selected\n  toggleTermActiveGrp: (grp: string) => void;\n  removeFrequencyTerm: (uid: string) => void;\n}\n\nfunction listItem(\n  grpActive: boolean,\n  i: number,\n  uid: string,\n  english: string,\n  removeFrequencyTerm: (uid: string) => void\n) {\n  return (\n    <div\n      key={uid}\n      className={classNames({\n        \"p-0 px-2\": true,\n        clickable: grpActive,\n      })}\n      onClick={() => {\n        if (grpActive) {\n          removeFrequencyTerm(uid);\n        }\n      }}\n    >\n      <span className=\"p-1\">\n        {grpActive && (\n          <XCircleIcon\n            className=\"incorrect-color\"\n            size=\"small\"\n            aria-label=\"remove\"\n          />\n        )}\n        {!grpActive && (\n          <IssueDraftIcon\n            // className=\"incorrect-color\"\n            size=\"small\"\n            aria-label=\"inactive\"\n          />\n        )}\n      </span>\n      <span className=\"p-1\">{english}</span>\n    </div>\n  );\n}\n\n/**\n * Groups + Frequency term list\n */\nexport function SetTermGFList(props: SetTermGFListProps) {\n  let cleanup: string[] = [];\n\n  const thisgrp = props.termsFreq.reduce<MinimunRawItem[]>((acc, f) => {\n    const found = props.terms.find((v) => v.uid === f);\n\n    if (found) {\n      acc = [...acc, found];\n    } else {\n      cleanup = [...cleanup, f];\n    }\n\n    return acc;\n  }, []);\n\n  const grplist = thisgrp.reduce<Record<string, MinimunRawItem[]>>(\n    (acc, cur) => {\n      const key = cur.grp ? cur.grp : \"undefined\";\n\n      if (acc[key]) {\n        acc[key] = [...acc[key], cur];\n      } else {\n        acc[key] = [cur];\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  return (\n    <div>\n      <span className=\"fs-5 fw-light\">Frequency</span>\n      <div>\n        {Object.keys(grplist).map((g) => {\n          const grpActive = props.termsActive.includes(g);\n\n          return (\n            <div key={g} className=\"mb-2\">\n              <span\n                className={classNames({ \"font-weight-bold\": grpActive })}\n                onClick={() => props.toggleTermActiveGrp(g)}\n              >\n                {g}\n              </span>\n              <div>\n                {grplist[g].map((word, iw) =>\n                  listItem(\n                    grpActive,\n                    iw,\n                    word.uid,\n                    word.english,\n                    props.removeFrequencyTerm\n                  )\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      {cleanup.length > 0 && (\n        <div className=\"mt-5 text-break\">\n          <span className=\"font-weight-bold\">Manual cleanup</span>\n          {cleanup.map((orphanUid, i) =>\n            listItem(true, i, orphanUid, orphanUid, props.removeFrequencyTerm)\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nSetTermGFList.propTypes = {\n  termsActive: PropTypes.array,\n  termsFreq: PropTypes.array,\n  terms: PropTypes.array,\n  removeFrequencyTerm: PropTypes.func,\n  toggleTermActiveGrp: PropTypes.func,\n};\n","import orderBy from \"lodash/orderBy\";\nimport type { GroupListMap } from \"nmemonica\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { GroupItem } from \"../Form/GroupItem\";\n\ninterface SetTermGListProps {\n  termsGroups: GroupListMap;\n  termsActive: string[];\n  toggleTermActiveGrp: (grp: string) => void;\n}\n\n/**\n * Group and subgroup list\n * @param {SetTermGListProps} props\n */\nexport function SetTermGList(props: SetTermGListProps) {\n  return (\n    <div>\n      <span className=\"fs-5 fw-light\">Groups</span>\n\n      {Object.keys(props.termsGroups).map((g) => {\n        const grpActive = props.termsActive.includes(g);\n\n        return (\n          <div key={g}>\n            <GroupItem\n              active={props.termsActive.includes(g)}\n              onClick={() => props.toggleTermActiveGrp(g)}\n            >\n              {g}\n            </GroupItem>\n\n            {!grpActive &&\n              orderBy(props.termsGroups[g], (o) => {\n                // order numerically if group has _number\n                const [, /*lbl,*/ num] = o.split(\"_\");\n                if (Number.isInteger(parseInt(num, 10))) {\n                  return parseInt(num, 10);\n                }\n                return o;\n              }).map((s) => (\n                <GroupItem\n                  key={`${g}.${s}`}\n                  addlStyle=\"ms-3\"\n                  active={props.termsActive.includes(g + \".\" + s)}\n                  onClick={() => {\n                    props.toggleTermActiveGrp(g + \".\" + s);\n                  }}\n                >\n                  {s}\n                </GroupItem>\n              ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nSetTermGList.propTypes = {\n  termsGroups: PropTypes.object,\n  termsActive: PropTypes.array,\n  toggleTermActiveGrp: PropTypes.func,\n};\n"],"names":["PlusMinus","props","label","value","className","onClick","onChange","propTypes","SettingsVocab","dispatch","useDispatch","vocabList","vocabulary","vocabGroups","sortMethod","vocabOrderRef","romajiEnabled","vocabRomaji","bareKanji","showBareKanji","hintEnabled","vocabHintRef","activeGroup","vocabActive","autoVerbView","verbColSplit","filterType","vocabFilterRef","difficultyThreshold","repetition","vocabRep","spaRepMaxReviewItem","reinforce","vocabReinforceRef","verbFormsOrder","includeNew","includeReviewed","useConnectVocabulary","vocabFilter","current","vocabOrder","vocabReinforce","vocabHint","Object","keys","length","getVocabulary","vocabFreq","useMemo","filter","k","rein","shownForms","hiddenForms","allForms","shown","reduce","acc","form","includes","hidden","NotReady","addlStyle","stale","getStaleGroups","Error","cause","code","flip","title","options","initial","buildAction","toggleVocabularyFilter","TermFilterBy","SetTermGList","termsGroups","termsActive","toggleTermActiveGrp","toggleVocabularyActiveGrp","SetTermGFList","termsFreq","terms","removeFrequencyTerm","removeFrequencyWord","TermSortByLabel","index","TermSortBy","toggleVocabularyReinforcement","toggleVocabularyOrdering","ThresholdFilterSlider","threshold","setThreshold","setMemorizedThreshold","setSpaRepMaxItemReview","active","action","toggleIncludeNew","statusText","toggleIncludeReviewed","disabled","toggleVocabularyRomaji","toggleVocabularyBareKanji","toggleVocabularyHint","toggleAutoVerbView","map","a","slice","b","x","c","setVerbFormsOrder","ChevronUpIcon","size","minusK","XCircleIcon","PlusCircleIcon","setChoiceN","slip","updateVerbColSplit","max","SimpleListMenu","anchorEl","setAnchorEl","useState","selectedIndex","setSelectedIndex","optionsRef","useRef","allowedRef","allowed","o","i","useEffect","open","Boolean","handleClickListItem","event","currentTarget","handleMenuItemClick","clickable","undefined","List","component","disablePadding","ListItemButton","disableGutters","id","ListItemText","primary","secondary","secondaryTypographyProps","color","Menu","onClose","MenuListProps","role","option","MenuItem","selected","IconButton","sx","minWidth","KebabHorizontalIcon","defaultValue","Math","abs","heatMap","difficultyMarks","MEMORIZED_THRLD","DIFFICULTY_THRLD","flipThresholdCB","useCallback","style","top","Slider","marks","track","onChangeCommitted","e","newValue","sign","Number","valueLabelDisplay","SortAscIcon","SortDescIcon","VerbFormSlider","initVal","safeInitial","min","marksMap","slide","raw","slideToRaw","slideToLabel","idx","half","trunc","splt","String","handleChange","curVal","Typography","gutterBottom","valueLabelFormat","getAriaValueText","step","listItem","grpActive","uid","english","IssueDraftIcon","cleanup","grplist","thisgrp","f","found","find","v","cur","key","grp","g","word","iw","orphanUid","GroupItem","num","split","isInteger","parseInt","s"],"mappings":"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"}